{"version":3,"sources":["components/useToggleState/index.tsx","components/FullPageContainer/index.tsx","components/Snackbar/index.tsx","components/Dialog/index.tsx","components/ConfirmDialog/index.tsx","cache/db.ts","cache/useCache.ts","cache/collections.ts","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","components/ReusableAccordion/index.tsx","components/useFilter/index.tsx","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","components/CustomPagination/index.tsx","pages/Main/words/shared/PaginatedFiltrableList/index.tsx","pages/Main/words/shared/Subject/index.tsx","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap-icons/dist/icons/trash.js","store/actions/note.actions.ts","pages/Main/Notes/EditNote/index.tsx","pages/Main/Notes/NewNote/index.tsx","pages/Main/Notes/index.tsx"],"names":["useToggleState","useState","show","setShow","handleToggle","prev","handleShow","handleHide","FullPageContainer","children","portal","document","getElementById","ReactDOM","createPortal","className","onClick","e","stopPropagation","style","backgroundColor","FullPageHeader","title","variant","size","type","SnackbarContainer","isShown","message","Portal","zIndex","useSnackbar","snackbar","setSnackbar","showMsg","msg","setTimeout","Snackbar","useCallback","Dialog","handleClose","centered","headerText","onHide","Header","closeButton","Body","useConfirmDialog","obj","isLoading","setIsloading","useEffect","onConfirmClick","ConfirmDialog","disabled","as","animation","role","aria-hidden","toggleConfirmMessage","db","Localbase","config","debug","toJson","success","data","useCache","collection","a","add","saved","key","id","doc","update","updated","set","delete","removed","datasource","get","list","found","save","saveByKey","findOneAndUpdate","setById","findOneAndDelete","drop","init","find","findOne","USERS","VERBS","ADJECTIVES","ADVERBS","NOUNS","PHRASALVERBS","LINKERS","TOPICS","THINGS","NOTES","IDIOMS","TENSES","GAMES","QA","TODOS","SelectableContext","React","createContext","context","displayName","AccordionToggle","forwardRef","_ref","ref","_ref$as","Component","eventKey","props","_objectWithoutPropertiesLoose","accordionOnClick","contextEventKey","useContext","AccordionContext","onSelect","useAccordionToggle","createElement","_extends","AccordionCollapse","Provider","value","Collapse","in","Children","only","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","bsPrefix","controlledProps","finalClassName","classNames","useBootstrapPrefix","Toggle","ReusableAccordion","defaultActiveKey","AccordionItems","Card","useFilter","dataSource","term","setTerm","filterHandler","filter","item","label","toLowerCase","includes","PageItem","active","activeLabel","SafeAnchor","defaultProps","createButton","name","defaultValue","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","decoratedBsPrefix","Item","useCustomPagination","array","itemsPerPage","currentPage","setCurrentPage","visitedPages","slice","leng","length","slices","Math","ceil","nextSlice","previous","prevSlice","firstSlice","lastSlice","CustomPagination","Array","map","index","newSlice","PaginatedFiltrableList","Fragment","Control","placeholder","onChange","target","Subject","definition","CardImg","prefix","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","bg","text","border","body","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Link","Text","Footer","ImgOverlay","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Trash","color","rest","xmlns","viewBox","width","height","fill","d","fillRule","propTypes","PropTypes","string","oneOfType","number","updateNote","payload","UPDATE_NOTE","deleteNote","DELETE_NOTE","schema","yup","shape","required","note","question","examples","of","sentence","answers","EditNote","handleToogle","word","dispatch","useSharedContext","values","res","INITIAL_VALUES","initialValues","onSubmit","validationSchema","handleBlur","handleChange","handleSubmit","touched","errors","Form","Container","Group","Label","autoComplete","onBlur","isInvalid","Feedback","push","remove","helper","j","NewNote","create","resetForm","v4","ADD_NOTE","Word","ItemContent","EditItemContainer","RemoveItemContainer","Notes","notes","useSelector","appState","Collections","then","GET_NOTES","console","log","catch","err","error"],"mappings":"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","file":"static/js/15.7f7bab81.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nexport const useToggleState = () =>{\r\n\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const handleToggle = () => {\r\n        setShow(prev => !prev);\r\n    }\r\n\r\n    const handleShow = () =>{\r\n        setShow(true);\r\n    }\r\n\r\n    const handleHide = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    return {\r\n        show,\r\n        handleToggle,\r\n        handleShow,\r\n        handleHide\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\ninterface FullPageContainerProps{\r\n    show: boolean; \r\n}\r\n\r\nexport const FullPageContainer: React.FC<FullPageContainerProps> = ({ children, show }) => {\r\n\r\n    const portal: any = document.getElementById('portal');\r\n \r\n    const handleClick = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    if(!show) return null;\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n\r\n            <div className=\"z-9999 full-page-container\" onClick={handleClick} style = {{backgroundColor: '#fafafa'}}>\r\n                <div className=\"overflow-auto\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n            ,\r\n            portal\r\n        )\r\n    )\r\n}\r\n\r\ninterface FullPageHeaderProps {\r\n    title: string;\r\n    handleToggle: () => void;\r\n}\r\n\r\nexport const FullPageHeader: React.FC<FullPageHeaderProps> = ({ title, handleToggle }) => {\r\n\r\n    return (\r\n        <div className=\"p-3 border-bottom d-flex align-items-center justify-content-between sticky-top bg-light\">\r\n            <h6 className=\"m-0\">{title}</h6>\r\n            <div className=\"text-right\">\r\n                <Button variant=\"secondary\" className=\"mr-2\" size=\"sm\"\r\n                    onClick={handleToggle}>Close</Button>\r\n                <Button variant=\"primary\" size=\"sm\" type=\"submit\"\r\n                >Save</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\ntype snackbarType = \"info\" | \"danger\" | \"warning\" | \"success\";\r\n\r\ninterface SnackbarState {\r\n    title: string;\r\n    isShown: boolean;\r\n    message: string;\r\n    type?: snackbarType\r\n}\r\n\r\nconst SnackbarContainer: React.FC<SnackbarState> = ({ isShown, message, type, title }) => {\r\n    const Portal: any = document.getElementById('portal');\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n                <Alert className=\"m-3 fixed-top\" show={isShown} variant={type} style={{zIndex: 9999999999}}>\r\n                    <h5>{title}</h5>\r\n                    <p className=\"m-0\">\r\n                        {message}\r\n                    </p>\r\n                </Alert>,\r\n            Portal\r\n        )\r\n    )\r\n}\r\n\r\nexport const useSnackbar = () => {\r\n    const [snackbar, setSnackbar] = useState<SnackbarState>({title: '', isShown: false, message: '', type: 'success' });\r\n\r\n    const showMsg = (title: string, msg: string, type?: snackbarType) => {\r\n        setSnackbar({ isShown: true, message: msg, title, type: type || 'success' });\r\n\r\n        setTimeout(()=>{\r\n            setSnackbar({...snackbar, isShown: false });\r\n        }, 3000);\r\n    }\r\n\r\n    const Snackbar = useCallback(\r\n        () => (\r\n            <SnackbarContainer\r\n                message={snackbar.message}\r\n                isShown={snackbar.isShown}\r\n                type={snackbar.type}\r\n                title = {snackbar.title}\r\n            />\r\n        ),\r\n        [snackbar]\r\n    )\r\n\r\n    return {\r\n        showMsg,\r\n        Snackbar\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface DialogProps{\r\n    show: boolean;\r\n    centered: boolean;\r\n    size?: \"sm\" | \"lg\" | \"xl\" | undefined;\r\n    headerText?: string;\r\n    handleClose: () => void;\r\n}\r\n\r\nexport const Dialog: React.FC<DialogProps> = ({show, handleClose, centered, size, children, headerText}) => {\r\n\r\n    return (\r\n        <Modal \r\n        show={show} \r\n        onHide={handleClose}\r\n        centered={centered}\r\n        size={size}\r\n        >\r\n\r\n       { headerText && <Modal.Header closeButton>\r\n          <h6 className=\"m-0 align-self-center\">{headerText}</h6>\r\n        </Modal.Header>}\r\n\r\n        <Modal.Body>\r\n            {children}\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    )\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { Dialog } from '../Dialog';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { useToggleState } from '../useToggleState';\r\n\r\ninterface ConfirmDialogProps {\r\n    message: string;\r\n    onConfirmClick: () => void;\r\n}\r\n\r\nexport const useConfirmDialog = (obj: ConfirmDialogProps) => {\r\n    const { handleToggle, show, handleHide } = useToggleState();\r\n    const [isLoading, setIsloading] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsloading(false);\r\n        }\r\n    }, []);\r\n\r\n    const toggleConfirmMessage = () => {\r\n        handleToggle();\r\n    };\r\n\r\n    const { message, onConfirmClick } = obj;\r\n\r\n    const ConfirmDialog = useCallback(\r\n        () => (\r\n            <Dialog show={show} centered={true} size=\"sm\" handleClose={handleHide}>\r\n                <h6>Confirm</h6>\r\n                <p>\r\n                    {message}\r\n                </p>\r\n                <div className=\"text-right\">\r\n                    <Button className=\"mr-2\" variant=\"secondary\" onClick={handleHide} size=\"sm\">Close</Button>\r\n                    <Button variant=\"primary\" size=\"sm\" onClick={onConfirmClick} disabled={isLoading}>\r\n                        {!isLoading ? 'Confirm' : (\r\n                            <>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"border\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                                <span className=\"ml-2\">Loading...</span>\r\n                            </>\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </Dialog>\r\n        ),\r\n        [show, message, onConfirmClick, handleHide, isLoading]\r\n    )\r\n\r\n    return {\r\n        ConfirmDialog,\r\n        toggleConfirmMessage,\r\n        setIsloading\r\n    }\r\n}\r\n","// @ts-ignore\r\nimport Localbase from 'localbase';\r\n\r\nlet db = new Localbase('remindMe');\r\n\r\ndb.config.debug = false\r\n\r\nexport default db;","import { CustomResponse } from \"../model/app.model\";\r\nimport db from './db';\r\n\r\nconst toJson = (success: boolean, msg: string, data?: any): CustomResponse => {\r\n    return {\r\n        message: msg,\r\n        success,\r\n        data\r\n    };\r\n};\r\n\r\nconst useCache = (collection: string) => {\r\n\r\n    async function save (obj: any): Promise<CustomResponse> {\r\n        try{\r\n            const saved = await db.collection(collection).add(obj);\r\n            return toJson(true, 'New record has been added', saved);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to create');\r\n        }\r\n    };\r\n\r\n    async function saveByKey (obj: any, key: string): Promise<CustomResponse> {\r\n        try{\r\n            const saved = await db.collection(collection).add(obj, key);\r\n            return toJson(true, 'New record has been added', saved);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to create');\r\n        }\r\n    };\r\n\r\n    async function findOneAndUpdate (obj: any, id: string): Promise<CustomResponse> {\r\n        try{\r\n            const updated = await db.collection(collection).doc({id}).update(obj);\r\n            return toJson(true, 'New record has been updated', updated);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to update');\r\n        }\r\n    };\r\n\r\n    async function setById (obj: any, id: string): Promise<CustomResponse> {\r\n        try{\r\n            const doc = await db.collection(collection).doc({id}).set(obj);\r\n            return toJson(true, 'New record has been overwrited', doc);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to overwrite');\r\n        }\r\n    };\r\n\r\n    async function findOneAndDelete (id: string): Promise<CustomResponse> {\r\n        try{\r\n            const removed = await db.collection(collection).doc({id}).delete();\r\n            return toJson(true, 'New record has been removed', removed);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function drop (): Promise<CustomResponse> {\r\n        try{\r\n            await db.collection(collection).delete();\r\n            return toJson(true, 'The whole collection has been removed');\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function init (data: any[]): Promise<CustomResponse> {\r\n        try{\r\n            const datasource = await db.collection(collection).set(data);\r\n            return toJson(true, 'Init the whole collection', datasource);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function find (): Promise<CustomResponse> {\r\n        try{\r\n            const list = await db.collection(collection).get();\r\n            return toJson(true, 'list of data', list);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to get');\r\n        }\r\n    };\r\n\r\n    async function findOne (id: string): Promise<CustomResponse> {\r\n        try{\r\n            const found = await db.collection(collection).doc(id).get();\r\n            return toJson(true, 'find a document', found);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to get');\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        save,\r\n        saveByKey,\r\n        findOneAndUpdate,\r\n        setById,\r\n        findOneAndDelete,\r\n        drop,\r\n        init,\r\n        find,\r\n        findOne\r\n    }\r\n}\r\n\r\nexport default useCache;","export const USERS = \"USERS\",\r\nVERBS = \"VERBS\",\r\nADJECTIVES = \"ADJECTIVES\",\r\nADVERBS = \"ADVERBS\",\r\nNOUNS = \"NOUNS\",\r\nPHRASALVERBS = \"PHRASALVERBS\",\r\nLINKERS = \"LINKERS\",\r\nTOPICS = \"TOPICS\",\r\nTHINGS = \"THINGS\",\r\nNOTES = \"NOTES\",\r\nIDIOMS = \"IDIOMS\",\r\nTENSES = \"TENSES\",\r\nGAMES = \"GAMES\",\r\nQA = \"QA\",\r\nTODOS = \"TODOS\";","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React from 'react';\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { ChevronRight } from 'react-bootstrap-icons';\r\n\r\nexport const ReusableAccordion: React.FC = ({children}) =>{\r\n\r\n    return(\r\n        <Accordion defaultActiveKey=\"ev0\" className=\"mt-3\">\r\n            {\r\n                children\r\n            }\r\n        </Accordion>\r\n    )\r\n}\r\n\r\ninterface AccordionItemsProps{\r\n    eventKey: string;\r\n    headerText: string;\r\n}\r\n\r\nexport const AccordionItems: React.FC<AccordionItemsProps> = ({children, eventKey, headerText }) => {\r\n\r\n    return (\r\n        <Card>\r\n            <Accordion.Toggle className=\"bg-light d-flex flex-row justify-content-between\" as={Card.Header} eventKey={eventKey}>\r\n                <p className=\"m-0\">{headerText}</p>\r\n                <ChevronRight />\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey={eventKey}>\r\n                <Card.Body>\r\n                  {\r\n                      children\r\n                  }\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useFilter = (dataSource: any[]) => {\r\n    const [term, setTerm] = useState<string>('');\r\n\r\n    function filterHandler(){\r\n        if(term === ''){\r\n            return [...dataSource];\r\n        }\r\n        else{\r\n            return [...dataSource.filter((item: any)=> item.label.toLowerCase().includes(term.toLowerCase()))];\r\n        }\r\n    }\r\n\r\n    return {\r\n        setTerm,\r\n        filterHandler\r\n    };\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n\n  function Button(_ref2) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"size\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import { useState } from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\n\r\nexport const useCustomPagination = (array: any[], itemsPerPage: number) => {\r\n    \r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n\r\n    const visitedPages = currentPage * itemsPerPage;\r\n    let list = array.slice(visitedPages, visitedPages + itemsPerPage);\r\n\r\n    const leng = array.length;\r\n    const slices = Math.ceil(leng / itemsPerPage);\r\n\r\n    const nextSlice = () => {\r\n        if (currentPage < slices - 1) {\r\n            setCurrentPage((previous) => previous + 1);\r\n        }\r\n    };\r\n\r\n    const prevSlice = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage((previous) => previous - 1);\r\n        }\r\n    };\r\n\r\n    const firstSlice = () => {\r\n        setCurrentPage(0);\r\n    };\r\n\r\n    const lastSlice = () => {\r\n        setCurrentPage(slices - 1);\r\n    };\r\n\r\n    const newSlice = (index: number) => {\r\n        setCurrentPage(index);\r\n    }\r\n\r\n    const CustomPagination = () => (\r\n\r\n        <Pagination>\r\n            <Pagination.First disabled={currentPage === 0} onClick={firstSlice} />\r\n            <Pagination.Prev disabled={currentPage === 0} onClick={prevSlice} />\r\n            {\r\n                [...Array(slices)].map((item, index) => (\r\n                    <Pagination.Item key={'slice' + index}\r\n                        active={currentPage === index} onClick={() => newSlice(index)} >\r\n                        {index + 1}\r\n                    </Pagination.Item>\r\n                ))\r\n            }\r\n            <Pagination.Next disabled={currentPage === (slices - 1)} onClick={nextSlice} />\r\n            <Pagination.Last disabled={currentPage === (slices - 1)} onClick={lastSlice} />\r\n        </Pagination>\r\n    )\r\n\r\n    return {\r\n        list,\r\n        CustomPagination\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useCustomPagination } from '../../../../../components/CustomPagination';\r\nimport { AccordionItems, ReusableAccordion } from '../../../../../components/ReusableAccordion';\r\nimport { useFilter } from '../../../../../components/useFilter';\r\n\r\ninterface PaginatedFiltrableListProps {\r\n    dataSource: any[];\r\n    children: (item: any) => JSX.Element;\r\n}\r\n\r\nexport const PaginatedFiltrableList: React.FC<PaginatedFiltrableListProps> = ({dataSource, children}) => {\r\n\r\n    const { setTerm, filterHandler } = useFilter([...dataSource]);\r\n    const { CustomPagination, list } = useCustomPagination(filterHandler(), 5);\r\n\r\n    const handleChange = (e: any) => {\r\n        setTerm(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form>\r\n                <Form.Control type=\"search\" placeholder=\"Are you looking for a word? filter here!\" \r\n                onChange={handleChange} />\r\n            </Form>\r\n\r\n            <ReusableAccordion>\r\n\r\n                {\r\n                    <React.Fragment>\r\n                       {\r\n                               list.map((item: any, index: number) => (\r\n                                   <AccordionItems key={item.id}  eventKey={'ev' + index} headerText= {item.label} >\r\n                                       {children(item)}\r\n                                   </AccordionItems>\r\n                               ))\r\n                       }\r\n                   </React.Fragment>\r\n                }\r\n\r\n            </ReusableAccordion>\r\n\r\n            \r\n          { list.length > 0 && <div className=\"d-flex justify-content-end mt-3\">\r\n                <CustomPagination />\r\n            </div>}\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport { FullPageContainer } from '../../../../../components/FullPageContainer';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useToggleState } from '../../../../../components/useToggleState';\r\n\r\ninterface SubjectProps {\r\n    definition: string;\r\n    title: string;\r\n    children: ( handleToggle: () => void ) => JSX.Element;\r\n}\r\n\r\nexport const Subject: React.FC<SubjectProps> = ({title, definition, children}) => {\r\n    const { handleToggle, show } = useToggleState();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"border rounded p-3 bg-light mb-3\">\r\n                    <p >\r\n                        {definition}\r\n                    </p>\r\n                    <div className=\"text-right\">\r\n                        <Button variant=\"primary\" size=\"sm\" onClick={handleToggle}>{title}</Button>\r\n                    </div>\r\n            </div>\r\n\r\n        <FullPageContainer show={show}>\r\n            {children(handleToggle)}\r\n        </FullPageContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n  }));\n});\nTrash.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default Trash;","import { ActionForm } from './ActionForm';\r\nimport { ADD_NOTE, DELETE_NOTE, UPDATE_NOTE, GET_NOTES } from './types';\r\n\r\nexport const getNotes = (payload: any): ActionForm =>{\r\n\r\n    return{\r\n        type: GET_NOTES,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const addNote = (payload: any): ActionForm => {\r\n\r\n    return{\r\n        type: ADD_NOTE,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const updateNote = (id: string, payload: any): ActionForm => {\r\n\r\n    return{\r\n        type: UPDATE_NOTE,\r\n        payload,\r\n        id\r\n    }\r\n};\r\n\r\nexport const deleteNote = (id: string): ActionForm => {\r\n\r\n    return{\r\n        type: DELETE_NOTE,\r\n        id\r\n    }\r\n};","import React from 'react';\r\nimport { GrammarNotesModel } from '../../../../model/app.model';\r\nimport { EditProps } from '../../words/shared/words.model';\r\nimport { FullPageHeader } from '../../../../components/FullPageContainer';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Formik, FieldArray } from 'formik';\r\nimport { Trash } from 'react-bootstrap-icons';\r\n\r\nimport * as yup from 'yup';\r\nimport { useSharedContext } from '../../../../Context';\r\nimport { useSnackbar } from '../../../../components/Snackbar';\r\nimport { updateNote } from '../../../../store/actions/note.actions';\r\n\r\nconst schema = yup.object().shape({\r\n    label: yup.string().required('This Field is required'),\r\n    note: yup.string().required('This Field is required'),\r\n    question: yup.string().required('This Field is required'),\r\n    examples: yup.array().of(\r\n        yup.object().shape({\r\n            sentence: yup.string().required('This Field is required'),\r\n            answers: yup.array().of(\r\n                yup.string()\r\n            )\r\n        })\r\n    )\r\n});\r\n\r\n\r\nexport const EditNote: React.FC<EditProps> = ({handleToogle, word, findOneAndUpdate}) => {\r\n    const { dispatch } = useSharedContext();\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n\r\n    const update = async (values: GrammarNotesModel) => { \r\n        try{\r\n            const id = word.id || '';\r\n            const res = await findOneAndUpdate(values, id);\r\n            if(res.success){\r\n                showMsg('Word updated', res.message);\r\n                dispatch(updateNote(id, values));\r\n            }\r\n            else{\r\n                showMsg('Failed to update', res.message, 'danger');\r\n            }\r\n        }\r\n        catch(err){\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const INITIAL_VALUES: GrammarNotesModel = {\r\n        ...word\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n             <Formik initialValues={INITIAL_VALUES} onSubmit={(values) => update(values)}\r\n         validationSchema = {schema}>\r\n             {\r\n                 ({ handleBlur, handleChange, handleSubmit, touched, errors, values }) => (\r\n                     <Form onSubmit={handleSubmit}>\r\n                         <FullPageHeader handleToggle={handleToogle} title=\"Edit Note\" />\r\n                         <Container className=\"py-3\">\r\n                             <Form.Group>\r\n                                 <Form.Label>Title</Form.Label>\r\n                                 <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"Enter a title\" name=\"label\"\r\n                                     onChange={handleChange} onBlur={handleBlur} value={values.label}\r\n                                     isInvalid={touched.label && !!errors.label} />\r\n \r\n                                 <Form.Control.Feedback type=\"invalid\">\r\n                                     {errors.label}\r\n                                 </Form.Control.Feedback>\r\n                             </Form.Group>\r\n \r\n                             <Form.Group>\r\n                                 <Form.Label>Note</Form.Label>\r\n                                 <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"your notes here..\" name=\"note\"\r\n                                     onChange={handleChange} onBlur={handleBlur} value={values.note}\r\n                                     isInvalid={touched.note && !!errors.note} />\r\n \r\n                                 <Form.Control.Feedback type=\"invalid\">\r\n                                     {errors.note}\r\n                                 </Form.Control.Feedback>\r\n                             </Form.Group>\r\n \r\n                             <Form.Group>\r\n                                 <Form.Label>Question (<small>A general question which adapts with the case of the note</small>)</Form.Label>\r\n                                 <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"add a question\" name=\"question\"\r\n                                     onChange={handleChange} onBlur={handleBlur} value={values.question}\r\n                                     isInvalid={touched.question && !!errors.question} />\r\n \r\n                                 <Form.Control.Feedback type=\"invalid\">\r\n                                     {errors.question}\r\n                                 </Form.Control.Feedback>\r\n                             </Form.Group>\r\n \r\n                             <FieldArray name=\"examples\">\r\n                                 {\r\n                                     ({ push, remove }) => (\r\n                                         <React.Fragment>\r\n                                             <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                                                 <h6 className=\"m-0\">Examples</h6>\r\n                                                 <Button size=\"sm\" variant=\"success\" onClick={() => push({ sentence: '', answers: [''] })}>New Example</Button>\r\n                                             </div>\r\n \r\n                                             {\r\n                                                 values.examples.length > 0 && values.examples.map((item: any, i: number) =>\r\n                                                 (\r\n                                                     <div className=\"rounded border bg-light p-3 mt-3\" key={'ex'+i}>\r\n                                                         <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                                                             <h6 className=\"m-0\">Example {i + 1}:</h6>\r\n                                                             <Button size=\"sm\" variant=\"danger\" onClick={() => remove(i)}\r\n                                                                 className=\"rounded-circle d-flex align-items-center align-self-end\"\r\n                                                                 style={{ width: '32px', height: '32px' }}>\r\n                                                                 <Trash />\r\n                                                             </Button>\r\n                                                         </div>\r\n                                                         <Form.Group>\r\n                                                             <Form.Label>case {i + 1} (A sentence / A particular Question)</Form.Label>\r\n                                                             <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"Question example\" name={`examples.${i}.sentence`}\r\n                                                                 onChange={handleChange} onBlur={handleBlur} value={values.examples[i].sentence}\r\n                                                                 isInvalid={touched.examples && !!errors.examples} />\r\n                                                             <Form.Control.Feedback type=\"invalid\">\r\n                                                                This Field is required\r\n                                                             </Form.Control.Feedback>\r\n                                                         </Form.Group>\r\n \r\n                                                         <FieldArray name={`examples.${i}.answers`}>\r\n                                                             {\r\n                                                                 (helper) => (\r\n                                                                     <React.Fragment>\r\n                                                                         \r\n                                                                             <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                                                                                 <h6 className=\"m-0\">Possible Answers</h6>\r\n                                                                                 <Button size=\"sm\" variant=\"info\" onClick= {() => helper.push('')}>New Answer</Button>\r\n                                                                             </div>\r\n                                                                            { values.examples[i].answers.length > 0 && values.examples[i].answers.map((item: string, j: number) => (\r\n                                                                                 <Form.Group key={'answer'+i+j}>\r\n                                                                                     <Form.Label>\r\n                                                                                         <span>Answer {j + 1}:</span>\r\n                                                                                         <span className=\"text-secondary ml-2 icons\" onClick={()=> helper.remove(j)}>\r\n                                                                                             <Trash />\r\n                                                                                         </span>\r\n                                                                                     </Form.Label>\r\n                                                                                     <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"Enter your answer\" name={`examples.${i}.answers.${j}`}\r\n                                                                                         onChange={handleChange} onBlur={handleBlur} value={values.examples[i].answers[j]} />\r\n                                                                                 </Form.Group>\r\n                                                                             ))}\r\n                                                                         \r\n                                                                     </React.Fragment>\r\n                                                                 )\r\n                                                             }\r\n                                                         </FieldArray>\r\n                                                     </div>\r\n                                                 ))\r\n                                             }\r\n                                         </React.Fragment>\r\n                                     )\r\n                                 }\r\n                             </FieldArray>\r\n \r\n \r\n                         </Container>\r\n \r\n                     </Form>\r\n                 )\r\n             }\r\n         </Formik>\r\n         <Snackbar />\r\n        </React.Fragment>\r\n     )\r\n}\r\n","import React from 'react';\r\nimport { FullPageHeader } from '../../../../components/FullPageContainer';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { Formik, FieldArray } from 'formik';\r\nimport { GrammarNotesModel } from '../../../../model/app.model';\r\nimport { Trash } from 'react-bootstrap-icons';\r\n\r\nimport * as yup from 'yup';\r\nimport { AddProps } from '../../words/shared/words.model';\r\nimport { useSharedContext } from '../../../../Context';\r\nimport { useSnackbar } from '../../../../components/Snackbar';\r\nimport { v4 } from 'uuid';\r\nimport { addNote } from '../../../../store/actions/note.actions';\r\n\r\nconst INITIAL_VALUES: GrammarNotesModel = {\r\n    label: '',\r\n    note: '',\r\n    question: '',\r\n    examples: [{ sentence: '', answers: [''] }]\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n    label: yup.string().required('This Field is required'),\r\n    note: yup.string().required('This Field is required'),\r\n    question: yup.string().required('This Field is required'),\r\n    examples: yup.array().of(\r\n        yup.object().shape({\r\n            sentence: yup.string().required('This Field is required'),\r\n            answers: yup.array().of(\r\n                yup.string()\r\n            )\r\n        })\r\n    )\r\n})\r\n\r\nexport const NewNote: React.FC<AddProps> = ({ handleToogle, saveByKey }) => {\r\n    const { dispatch } = useSharedContext();\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n\r\n    const create = async (values: GrammarNotesModel, resetForm: ()=> void) => {\r\n        try{\r\n            const id = v4();\r\n            const res = await saveByKey({...values, id}, id);\r\n            if(res.success){\r\n                showMsg('created', res.message);\r\n                dispatch(addNote({...values, id}));\r\n                resetForm();\r\n            }\r\n            else{\r\n                showMsg('Failed to Created', 'Failed to persist', 'danger');\r\n            }\r\n            \r\n        }\r\n        catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n    \r\n    return (\r\n       <React.Fragment>\r\n            <Formik initialValues={INITIAL_VALUES} onSubmit={(values, {resetForm}) => create(values, resetForm)}\r\n        validationSchema = {schema}>\r\n            {\r\n                ({ handleBlur, handleChange, handleSubmit, touched, errors, values }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <FullPageHeader handleToggle={handleToogle} title=\"New Note\" />\r\n                        <Container className=\"py-3\">\r\n                            <Form.Group>\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"Enter a title\" name=\"label\"\r\n                                    onChange={handleChange} onBlur={handleBlur} value={values.label}\r\n                                    isInvalid={touched.label && !!errors.label} />\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.label}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Note</Form.Label>\r\n                                <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"your notes here..\" name=\"note\"\r\n                                    onChange={handleChange} onBlur={handleBlur} value={values.note}\r\n                                    isInvalid={touched.note && !!errors.note} />\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.note}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Question (<small>A general question which adapts with the case of the note</small>)</Form.Label>\r\n                                <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"add a question\" name=\"question\"\r\n                                    onChange={handleChange} onBlur={handleBlur} value={values.question}\r\n                                    isInvalid={touched.question && !!errors.question} />\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.question}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <FieldArray name=\"examples\">\r\n                                {\r\n                                    ({ push, remove }) => (\r\n                                        <React.Fragment>\r\n                                            <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                                                <h6 className=\"m-0\">Examples</h6>\r\n                                                <Button size=\"sm\" variant=\"success\" onClick={() => push({ sentence: '', answers: [''] })}>New Example</Button>\r\n                                            </div>\r\n\r\n                                            {\r\n                                                values.examples.length > 0 && values.examples.map((item: any, i: number) =>\r\n                                                (\r\n                                                    <div className=\"rounded border bg-light p-3 mt-3\" key={'ex'+i}>\r\n                                                        <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                                                            <h6 className=\"m-0\">Example {i + 1}:</h6>\r\n                                                            <Button size=\"sm\" variant=\"danger\" onClick={() => remove(i)}\r\n                                                                className=\"rounded-circle d-flex align-items-center align-self-end\"\r\n                                                                style={{ width: '32px', height: '32px' }}>\r\n                                                                <Trash />\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                        <Form.Group>\r\n                                                            <Form.Label>case {i + 1} (A sentence / A particular Question)</Form.Label>\r\n                                                            <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"Question example\" name={`examples.${i}.sentence`}\r\n                                                                onChange={handleChange} onBlur={handleBlur} value={values.examples[i].sentence}\r\n                                                                isInvalid={touched.examples && !!errors.examples} />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                               This Field is required\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n\r\n                                                        <FieldArray name={`examples.${i}.answers`}>\r\n                                                            {\r\n                                                                (helper) => (\r\n                                                                    <React.Fragment>\r\n                                                                        \r\n                                                                            <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n                                                                                <h6 className=\"m-0\">Possible Answers</h6>\r\n                                                                                <Button size=\"sm\" variant=\"info\" onClick= {() => helper.push('')}>New Answer</Button>\r\n                                                                            </div>\r\n                                                                           { values.examples[i].answers.length > 0 && values.examples[i].answers.map((item: string, j: number) => (\r\n                                                                                <Form.Group key={'answer'+i+j}>\r\n                                                                                    <Form.Label>\r\n                                                                                        <span>Answer {j + 1}:</span>\r\n                                                                                        <span className=\"text-secondary ml-2 icons\" onClick={()=> helper.remove(j)}>\r\n                                                                                            <Trash />\r\n                                                                                        </span>\r\n                                                                                    </Form.Label>\r\n                                                                                    <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"Enter your answer\" name={`examples.${i}.answers.${j}`}\r\n                                                                                        onChange={handleChange} onBlur={handleBlur} value={values.examples[i].answers[j]} />\r\n                                                                                </Form.Group>\r\n                                                                            ))}\r\n                                                                        \r\n                                                                    </React.Fragment>\r\n                                                                )\r\n                                                            }\r\n                                                        </FieldArray>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                            </FieldArray>\r\n\r\n\r\n                        </Container>\r\n\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        <Snackbar />\r\n       </React.Fragment>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { useConfirmDialog } from '../../../components/ConfirmDialog';\r\nimport { FullPageContainer } from '../../../components/FullPageContainer';\r\nimport { useToggleState } from '../../../components/useToggleState';\r\nimport { AppState } from '../../../model/app.model';\r\nimport { deleteNote, getNotes } from '../../../store/actions/note.actions';\r\nimport { PaginatedFiltrableList } from '../words/shared/PaginatedFiltrableList';\r\nimport { Subject } from '../words/shared/Subject';\r\nimport { EditNote } from './EditNote';\r\nimport { NewNote } from './NewNote';\r\nimport { useSharedContext } from '../../../Context';\r\nimport { Collections, useCache } from '../../../cache';\r\nimport { wordContentProps, WordEditProps, WordRemoveProps, wordsProps } from '../words/shared/words.model';\r\n\r\nconst Notes: React.FC = () => {\r\n\r\n    const notes = useSelector((appState: AppState) => appState.notes);\r\n    const { dispatch } = useSharedContext();\r\n    const { find, findOneAndUpdate, findOneAndDelete, saveByKey } = useCache(Collections.NOTES);\r\n\r\n    useEffect(() => {\r\n        find().then((res) => {\r\n            if (res.success) {\r\n                dispatch(getNotes(res.data));\r\n            }\r\n            else {\r\n                console.log(res.message);\r\n            }\r\n        })\r\n        .catch(err => console.error(err));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment >\r\n            \r\n            <Subject\r\n                title=\"New Note\"\r\n                definition=\"\r\n                    A Note is a word used to identify any of a class of people, places or things.\r\n                \">\r\n                {\r\n                    (handleToggle) => (\r\n                        <NewNote handleToogle={handleToggle} saveByKey = {saveByKey} />\r\n                    )\r\n                }\r\n            </Subject>\r\n\r\n            <PaginatedFiltrableList dataSource={notes}>\r\n                {\r\n                    (item) => (\r\n                        <Word word={item} findOneAndUpdate = {findOneAndUpdate} findOneAndDelete = {findOneAndDelete} />\r\n                    )\r\n                }\r\n            </PaginatedFiltrableList>\r\n\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nconst Word: React.FC<wordsProps> = ({ word, findOneAndUpdate, findOneAndDelete }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ItemContent word={word} />\r\n\r\n            <div className=\"text-right\">\r\n                <EditItemContainer word = {word} findOneAndUpdate = {findOneAndUpdate} />\r\n                <RemoveItemContainer word = {word} findOneAndDelete = {findOneAndDelete} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst ItemContent: React.FC<wordContentProps> = ({ word }) => {\r\n    return (\r\n        <p className=\"text-secondary\">\r\n            \"{word.note}\"\r\n        </p>\r\n    )\r\n};\r\n\r\nconst EditItemContainer: React.FC<WordEditProps> = ({ word, findOneAndUpdate }) => {\r\n    const { handleToggle, show } = useToggleState();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button className=\"mr-2\" variant=\"primary\" size=\"sm\" onClick={handleToggle}>Details</Button>\r\n\r\n            <FullPageContainer show={show}>\r\n                <EditNote word={word} handleToogle={handleToggle} findOneAndUpdate = {findOneAndUpdate} />\r\n            </FullPageContainer>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst RemoveItemContainer: React.FC<WordRemoveProps> = ({word, findOneAndDelete}) => {\r\n    const { dispatch } = useSharedContext();\r\n    const { ConfirmDialog, toggleConfirmMessage } = useConfirmDialog({\r\n        message: 'Are you sure you want to remove this Note? This cannot be undone.',\r\n        onConfirmClick: onConfirm\r\n    });\r\n\r\n    async function onConfirm() {\r\n        try {\r\n            const res = await findOneAndDelete(word.id || '');\r\n            if (res.success) {\r\n                toggleConfirmMessage();\r\n                setTimeout(() => {\r\n                    dispatch(deleteNote(word.id || ''));\r\n                }, 0);\r\n            }\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    const removeItem = () => {\r\n        toggleConfirmMessage();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"danger\" size=\"sm\" onClick={removeItem}>Remove</Button>\r\n            <ConfirmDialog />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Notes;"],"sourceRoot":""}