{"version":3,"sources":["components/useToggleState/index.tsx","components/FullPageContainer/index.tsx","components/Snackbar/index.tsx","components/Dialog/index.tsx","components/ConfirmDialog/index.tsx","cache/db.ts","cache/useCache.ts","cache/collections.ts","components/useFilter/index.tsx","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","components/ReusableAccordion/index.tsx","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","components/CustomPagination/index.tsx","pages/Main/words/shared/PaginatedFiltrableList/index.tsx","pages/Main/words/shared/Subject/index.tsx","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","store/actions/tenses.actions.ts","pages/Main/TensePractise/EditSentences/index.tsx","pages/Main/TensePractise/NewSentences/index.tsx","pages/Main/TensePractise/index.tsx"],"names":["useToggleState","useState","show","setShow","handleToggle","prev","handleShow","handleHide","FullPageContainer","children","portal","document","getElementById","ReactDOM","createPortal","className","onClick","e","stopPropagation","style","backgroundColor","FullPageHeader","title","variant","size","type","SnackbarContainer","isShown","message","Portal","zIndex","useSnackbar","snackbar","setSnackbar","showMsg","msg","setTimeout","Snackbar","useCallback","Dialog","handleClose","centered","headerText","onHide","Header","closeButton","Body","useConfirmDialog","obj","isLoading","setIsloading","useEffect","onConfirmClick","ConfirmDialog","disabled","as","animation","role","aria-hidden","toggleConfirmMessage","db","Localbase","config","debug","toJson","success","data","useCache","collection","a","add","saved","key","label","trim","toLowerCase","doc","get","id","update","updated","set","delete","removed","datasource","list","found","save","saveByKey","findOneAndUpdate","setById","findOneAndDelete","drop","init","find","findOne","USERS","VERBS","ADJECTIVES","ADVERBS","NOUNS","PHRASALVERBS","LINKERS","TOPICS","THINGS","NOTES","IDIOMS","TENSES","GAMES","QA","TODOS","useFilter","dataSource","term","setTerm","filterHandler","filter","item","includes","SelectableContext","React","createContext","context","displayName","AccordionToggle","forwardRef","_ref","ref","_ref$as","Component","eventKey","props","_objectWithoutPropertiesLoose","accordionOnClick","contextEventKey","useContext","AccordionContext","onSelect","useAccordionToggle","createElement","_extends","AccordionCollapse","Provider","value","Collapse","in","Children","only","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","bsPrefix","controlledProps","finalClassName","classNames","useBootstrapPrefix","Toggle","ReusableAccordion","defaultActiveKey","AccordionItems","Card","PageItem","active","activeLabel","SafeAnchor","defaultProps","createButton","name","defaultValue","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","decoratedBsPrefix","Item","useCustomPagination","array","itemsPerPage","currentPage","setCurrentPage","visitedPages","slice","leng","length","slices","Math","ceil","nextSlice","previous","prevSlice","firstSlice","lastSlice","newSlice","index","CustomPagination","PaginatedFiltrableList","Fragment","Control","placeholder","onChange","target","map","Subject","definition","CardImg","prefix","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","bg","text","border","body","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Link","Text","Footer","ImgOverlay","updateTense","payload","UPDATE_TENSE","deleteTense","DELETE_TENSE","schema","yup","shape","required","sentences","of","sentence","EditSentences","handleToogle","word","dispatch","useSharedContext","values","res","INITIAL_VALUES","initialValues","onSubmit","validationSchema","handleChange","handleBlur","handleSubmit","touched","errors","Form","Container","Group","Label","autoComplete","onBlur","isInvalid","Feedback","tense","NewSentences","create","resetForm","v4","ADD_TENSE","Word","ItemContent","idx","outline","EditItemContainer","RemoveItemContainer","TensePractise","useSelector","appState","tenses","Collections","then","GET_TENSES","console","log","catch","err","error"],"mappings":"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","file":"static/js/16.faf0621f.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nexport const useToggleState = () =>{\r\n\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const handleToggle = () => {\r\n        setShow(prev => !prev);\r\n    }\r\n\r\n    const handleShow = () =>{\r\n        setShow(true);\r\n    }\r\n\r\n    const handleHide = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    return {\r\n        show,\r\n        handleToggle,\r\n        handleShow,\r\n        handleHide\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\ninterface FullPageContainerProps{\r\n    show: boolean; \r\n}\r\n\r\nexport const FullPageContainer: React.FC<FullPageContainerProps> = ({ children, show }) => {\r\n\r\n    const portal: any = document.getElementById('portal');\r\n \r\n    const handleClick = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    if(!show) return null;\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n\r\n            <div className=\"z-9999 full-page-container\" onClick={handleClick} style = {{backgroundColor: '#fafafa'}}>\r\n                <div className=\"overflow-auto\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n            ,\r\n            portal\r\n        )\r\n    )\r\n}\r\n\r\ninterface FullPageHeaderProps {\r\n    title: string;\r\n    handleToggle: () => void;\r\n}\r\n\r\nexport const FullPageHeader: React.FC<FullPageHeaderProps> = ({ title, handleToggle }) => {\r\n\r\n    return (\r\n        <div className=\"p-3 border-bottom d-flex align-items-center justify-content-between sticky-top bg-light\">\r\n            <h6 className=\"m-0\">{title}</h6>\r\n            <div className=\"text-right\">\r\n                <Button variant=\"secondary\" className=\"mr-2\" size=\"sm\"\r\n                    onClick={handleToggle}>Close</Button>\r\n                <Button variant=\"primary\" size=\"sm\" type=\"submit\"\r\n                >Save</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\ntype snackbarType = \"info\" | \"danger\" | \"warning\" | \"success\";\r\n\r\ninterface SnackbarState {\r\n    title: string;\r\n    isShown: boolean;\r\n    message: string;\r\n    type?: snackbarType\r\n}\r\n\r\nconst SnackbarContainer: React.FC<SnackbarState> = ({ isShown, message, type, title }) => {\r\n    const Portal: any = document.getElementById('portal');\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n                <Alert className=\"m-3 fixed-top\" show={isShown} variant={type} style={{zIndex: 9999999999}}>\r\n                    <h5>{title}</h5>\r\n                    <p className=\"m-0\">\r\n                        {message}\r\n                    </p>\r\n                </Alert>,\r\n            Portal\r\n        )\r\n    )\r\n}\r\n\r\nexport const useSnackbar = () => {\r\n    const [snackbar, setSnackbar] = useState<SnackbarState>({title: '', isShown: false, message: '', type: 'success' });\r\n\r\n    const showMsg = (title: string, msg: string, type?: snackbarType) => {\r\n        setSnackbar({ isShown: true, message: msg, title, type: type || 'success' });\r\n\r\n        setTimeout(()=>{\r\n            setSnackbar({...snackbar, isShown: false });\r\n        }, 3000);\r\n    }\r\n\r\n    const Snackbar = useCallback(\r\n        () => (\r\n            <SnackbarContainer\r\n                message={snackbar.message}\r\n                isShown={snackbar.isShown}\r\n                type={snackbar.type}\r\n                title = {snackbar.title}\r\n            />\r\n        ),\r\n        [snackbar]\r\n    )\r\n\r\n    return {\r\n        showMsg,\r\n        Snackbar\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface DialogProps{\r\n    show: boolean;\r\n    centered: boolean;\r\n    size?: \"sm\" | \"lg\" | \"xl\" | undefined;\r\n    headerText?: string;\r\n    handleClose: () => void;\r\n}\r\n\r\nexport const Dialog: React.FC<DialogProps> = ({show, handleClose, centered, size, children, headerText}) => {\r\n\r\n    return (\r\n        <Modal \r\n        show={show} \r\n        onHide={handleClose}\r\n        centered={centered}\r\n        size={size}\r\n        >\r\n\r\n       { headerText && <Modal.Header closeButton>\r\n          <h6 className=\"m-0 align-self-center\">{headerText}</h6>\r\n        </Modal.Header>}\r\n\r\n        <Modal.Body>\r\n            {children}\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    )\r\n}","import { useCallback, useEffect, useState } from 'react';\r\nimport { Dialog } from '../Dialog';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { useToggleState } from '../useToggleState';\r\n\r\ninterface ConfirmDialogProps {\r\n    message: string;\r\n    onConfirmClick: () => void;\r\n}\r\n\r\nexport const useConfirmDialog = (obj: ConfirmDialogProps) => {\r\n    const { handleToggle, show, handleHide } = useToggleState();\r\n    const [isLoading, setIsloading] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsloading(false);\r\n        }\r\n    }, []);\r\n\r\n    const toggleConfirmMessage = () => {\r\n        handleToggle();\r\n    };\r\n\r\n    const { message, onConfirmClick } = obj;\r\n\r\n    const ConfirmDialog = useCallback(\r\n        () => (\r\n            <Dialog show={show} centered={true} size=\"sm\" handleClose={handleHide}>\r\n                <h6>Confirm</h6>\r\n                <p>\r\n                    {message}\r\n                </p>\r\n                <div className=\"text-right\">\r\n                    <Button className=\"mr-2\" variant=\"secondary\" onClick={handleHide} size=\"sm\">Close</Button>\r\n                    <Button variant=\"primary\" size=\"sm\" onClick={onConfirmClick} disabled={isLoading}>\r\n                        {!isLoading ? 'Confirm' : (\r\n                            <>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"border\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                                <span className=\"ml-2\">Loading...</span>\r\n                            </>\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </Dialog>\r\n        ),\r\n        [show, message, onConfirmClick, handleHide, isLoading]\r\n    )\r\n\r\n    return {\r\n        ConfirmDialog,\r\n        toggleConfirmMessage,\r\n        setIsloading\r\n    }\r\n}\r\n","// @ts-ignore\r\nimport Localbase from 'localbase';\r\n\r\nlet db = new Localbase('remindMe');\r\n\r\ndb.config.debug = false\r\n\r\nexport default db;","import { CustomResponse } from \"../model/app.model\";\r\nimport db from './db';\r\n\r\nconst toJson = (success: boolean, msg: string, data?: any): CustomResponse => {\r\n    return {\r\n        message: msg,\r\n        success,\r\n        data\r\n    };\r\n};\r\n\r\nconst useCache = (collection: string) => {\r\n\r\n    async function save (obj: any): Promise<CustomResponse> {\r\n        try{\r\n            const saved = await db.collection(collection).add(obj);\r\n            return toJson(true, 'New record has been added', saved);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to create');\r\n        }\r\n    };\r\n\r\n    async function saveByKey (obj: any, key: string): Promise<CustomResponse> {\r\n        try{\r\n            const label = obj.label.trim().toLowerCase();\r\n            const found = await db.collection(collection).doc({label}).get();\r\n            if(found){\r\n                return toJson(false, `The word ${label} already exsist!`);\r\n            }\r\n            const saved = await db.collection(collection).add({\r\n                ...obj, \r\n                label: label\r\n            }, key);\r\n            return toJson(true, 'New record has been added', saved);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to persist a new Word');\r\n        }\r\n    };\r\n\r\n    async function findOneAndUpdate (obj: any, id: string): Promise<CustomResponse> {\r\n        try{\r\n            const updated = await db.collection(collection).doc({id}).update({\r\n                ...obj,\r\n                label: obj.label.trim().toLowerCase()\r\n            });\r\n            return toJson(true, 'New record has been updated', updated);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to update');\r\n        }\r\n    };\r\n\r\n    async function setById (obj: any, id: string): Promise<CustomResponse> {\r\n        try{\r\n            const doc = await db.collection(collection).doc({id}).set(obj);\r\n            return toJson(true, 'New record has been overwrited', doc);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to overwrite');\r\n        }\r\n    };\r\n\r\n    async function findOneAndDelete (id: string): Promise<CustomResponse> {\r\n        try{\r\n            const removed = await db.collection(collection).doc({id}).delete();\r\n            return toJson(true, 'New record has been removed', removed);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function drop (): Promise<CustomResponse> {\r\n        try{\r\n            await db.collection(collection).delete();\r\n            return toJson(true, 'The whole collection has been removed');\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function init (data: any[]): Promise<CustomResponse> {\r\n        try{\r\n            const datasource = await db.collection(collection).set(data);\r\n            return toJson(true, 'Init the whole collection', datasource);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function find (): Promise<CustomResponse> {\r\n        try{\r\n            const list = await db.collection(collection).get();\r\n            return toJson(true, 'list of data', list);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to get');\r\n        }\r\n    };\r\n\r\n    async function findOne (id: string): Promise<CustomResponse> {\r\n        try{\r\n            const found = await db.collection(collection).doc({id}).get();\r\n            return toJson(true, 'find a document', found);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to get');\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        save,\r\n        saveByKey,\r\n        findOneAndUpdate,\r\n        setById,\r\n        findOneAndDelete,\r\n        drop,\r\n        init,\r\n        find,\r\n        findOne\r\n    }\r\n}\r\n\r\nexport default useCache;","export const USERS = \"USERS\",\r\nVERBS = \"VERBS\",\r\nADJECTIVES = \"ADJECTIVES\",\r\nADVERBS = \"ADVERBS\",\r\nNOUNS = \"NOUNS\",\r\nPHRASALVERBS = \"PHRASALVERBS\",\r\nLINKERS = \"LINKERS\",\r\nTOPICS = \"TOPICS\",\r\nTHINGS = \"THINGS\",\r\nNOTES = \"NOTES\",\r\nIDIOMS = \"IDIOMS\",\r\nTENSES = \"TENSES\",\r\nGAMES = \"GAMES\",\r\nQA = \"QA\",\r\nTODOS = \"TODOS\";","import { useState } from \"react\";\r\n\r\nexport const useFilter = (dataSource: any[]) => {\r\n    const [term, setTerm] = useState<string>('');\r\n\r\n    function filterHandler(){\r\n        if(term === ''){\r\n            return [...dataSource];\r\n        }\r\n        else{\r\n            return [...dataSource.filter((item: any)=> item.label.toLowerCase().includes(term.toLowerCase()))];\r\n        }\r\n    }\r\n\r\n    return {\r\n        setTerm,\r\n        filterHandler\r\n    };\r\n}\r\n","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React from 'react';\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { ChevronRight } from 'react-bootstrap-icons';\r\n\r\nexport const ReusableAccordion: React.FC = ({children}) =>{\r\n\r\n    return(\r\n        <Accordion defaultActiveKey=\"ev0\" className=\"mt-3\">\r\n            {\r\n                children\r\n            }\r\n        </Accordion>\r\n    )\r\n}\r\n\r\ninterface AccordionItemsProps{\r\n    eventKey: string;\r\n    headerText: string;\r\n}\r\n\r\nexport const AccordionItems: React.FC<AccordionItemsProps> = ({children, eventKey, headerText }) => {\r\n\r\n    return (\r\n        <Card>\r\n            <Accordion.Toggle className=\"bg-light d-flex flex-row justify-content-between\" as={Card.Header} eventKey={eventKey}>\r\n                <p className=\"m-0 first-letter-capitalize\">{headerText}</p>\r\n                <ChevronRight />\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey={eventKey}>\r\n                <Card.Body>\r\n                  {\r\n                      children\r\n                  }\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n\n  function Button(_ref2) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"size\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import { useState } from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nexport const useCustomPagination = (array: any[], itemsPerPage: number) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n\r\n    const visitedPages = currentPage * itemsPerPage;\r\n    let list = array.slice(visitedPages, visitedPages + itemsPerPage);\r\n\r\n    const leng = array.length;\r\n    const slices = Math.ceil(leng / itemsPerPage);\r\n\r\n    const nextSlice = () => {\r\n        if (currentPage < slices - 1) {\r\n            setCurrentPage((previous) => previous + 1);\r\n        }\r\n    };\r\n\r\n    const prevSlice = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage((previous) => previous - 1);\r\n        }\r\n    };\r\n\r\n    const firstSlice = () => {\r\n        setCurrentPage(0);\r\n    };\r\n\r\n    const lastSlice = () => {\r\n        setCurrentPage(slices - 1);\r\n    };\r\n\r\n    const newSlice = (index: number) => {\r\n        setCurrentPage(index);\r\n    }\r\n\r\n    const CustomPagination = () => (\r\n\r\n        <Pagination>\r\n            <Pagination.First disabled={currentPage === 0} onClick={firstSlice} />\r\n            <Pagination.Prev disabled={currentPage === 0} onClick={prevSlice} />\r\n\r\n            {\r\n                currentPage < (slices - 1) &&\r\n                <Pagination.Item active onClick={() => newSlice(currentPage)}>{currentPage + 1}</Pagination.Item>\r\n            }\r\n            {\r\n                currentPage < (slices - 2) &&\r\n                <Pagination.Item onClick={() => newSlice(currentPage + 1)}>{currentPage + 2}</Pagination.Item>\r\n            }\r\n           \r\n            {\r\n                slices > 4 &&\r\n                <Pagination.Ellipsis disabled></Pagination.Ellipsis>\r\n            }\r\n            <Pagination.Item active={currentPage === (slices - 1)} onClick={() => newSlice(slices - 1)}>{slices}</Pagination.Item>\r\n\r\n            <Pagination.Next disabled={currentPage === (slices - 1)} onClick={nextSlice} />\r\n            <Pagination.Last disabled={currentPage === (slices - 1)} onClick={lastSlice} />\r\n        </Pagination>\r\n    )\r\n\r\n    return {\r\n        list,\r\n        CustomPagination\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useCustomPagination } from '../../../../../components/CustomPagination';\r\nimport { AccordionItems, ReusableAccordion } from '../../../../../components/ReusableAccordion';\r\nimport { useFilter } from '../../../../../components/useFilter';\r\n\r\ninterface PaginatedFiltrableListProps {\r\n    dataSource: any[];\r\n    children: (item: any) => JSX.Element;\r\n}\r\n\r\nexport const PaginatedFiltrableList: React.FC<PaginatedFiltrableListProps> = ({dataSource, children}) => {\r\n\r\n    const { setTerm, filterHandler } = useFilter([...dataSource]);\r\n    let { CustomPagination, list } = useCustomPagination(filterHandler(), 6);\r\n\r\n    const handleChange = (e: any) => {\r\n        setTerm(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form>\r\n                <Form.Control type=\"search\" placeholder=\"Are you looking for a word? filter here!\" \r\n                onChange={handleChange} />\r\n            </Form>\r\n\r\n            <ReusableAccordion>\r\n\r\n                {\r\n                    <React.Fragment>\r\n                       {\r\n                               list.map((item: any, index: number) => (\r\n                                   <AccordionItems key={item.id}  eventKey={'ev' + index} headerText= {item.label} >\r\n                                       {children(item)}\r\n                                   </AccordionItems>\r\n                               ))\r\n                       }\r\n                   </React.Fragment>\r\n                }\r\n\r\n            </ReusableAccordion>\r\n\r\n            \r\n          { list.length > 0 && \r\n            <div className=\"d-flex justify-content-end mt-3\">\r\n                <CustomPagination />\r\n            </div>\r\n          }\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport { FullPageContainer } from '../../../../../components/FullPageContainer';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useToggleState } from '../../../../../components/useToggleState';\r\n\r\ninterface SubjectProps {\r\n    definition: string;\r\n    title: string;\r\n    children: ( handleToggle: () => void ) => JSX.Element;\r\n}\r\n\r\nexport const Subject: React.FC<SubjectProps> = ({title, definition, children}) => {\r\n    const { handleToggle, show } = useToggleState();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"border rounded p-3 bg-light mb-3\">\r\n                    <p >\r\n                        {definition}\r\n                    </p>\r\n                    <div className=\"text-right\">\r\n                        <Button variant=\"primary\" size=\"sm\" onClick={handleToggle}>{title}</Button>\r\n                    </div>\r\n            </div>\r\n\r\n        <FullPageContainer show={show}>\r\n            {children(handleToggle)}\r\n        </FullPageContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import { ActionForm } from './ActionForm';\r\nimport { GET_TENSES, DELETE_TENSE, UPDATE_TENSE, ADD_TENSE } from './types';\r\n\r\nexport const getTenses = (payload: any): ActionForm =>{\r\n\r\n    return{\r\n        type: GET_TENSES,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const addTense = (payload: any): ActionForm => {\r\n\r\n    return{\r\n        type: ADD_TENSE,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const updateTense = (id: string, payload: any): ActionForm => {\r\n\r\n    return{\r\n        type: UPDATE_TENSE,\r\n        payload,\r\n        id\r\n    }\r\n};\r\n\r\nexport const deleteTense = (id: string): ActionForm => {\r\n\r\n    return{\r\n        type: DELETE_TENSE,\r\n        id\r\n    }\r\n};","import React from 'react';\r\nimport { TensePracticeModel } from '../../../../model/app.model';\r\nimport { EditProps } from '../../words/shared/words.model';\r\nimport { FullPageHeader } from '../../../../components/FullPageContainer';\r\nimport { Form, Container } from 'react-bootstrap';\r\nimport { Formik, FieldArray } from 'formik';\r\n\r\nimport * as yup from 'yup';\r\nimport { useSharedContext } from '../../../../Context';\r\nimport { useSnackbar } from '../../../../components/Snackbar';\r\nimport { updateTense } from '../../../../store/actions/tenses.actions';\r\n\r\nconst schema = yup.object().shape({\r\n    label: yup.string().required('This field is required'),\r\n    sentences: yup.array().of(\r\n        yup.object().shape({\r\n            sentence: yup.string().required(),\r\n        })\r\n    )\r\n})\r\n\r\nexport const EditSentences: React.FC<EditProps> = ({handleToogle, word, findOneAndUpdate}) => {\r\n\r\n    const { dispatch } = useSharedContext();\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n\r\n    const update = async (values: TensePracticeModel) => { \r\n        try{\r\n            const id = word.id || '';\r\n            const res = await findOneAndUpdate(values, id);\r\n            if(res.success){\r\n                showMsg('Word updated', res.message);\r\n                dispatch(updateTense(id, values));\r\n            }\r\n            else{\r\n                showMsg('Failed to update', res.message, 'danger');\r\n            }\r\n        }\r\n        catch(err){\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const INITIAL_VALUES: TensePracticeModel = {\r\n        ...word\r\n    };\r\n    \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik initialValues={INITIAL_VALUES} onSubmit={(values) => update(values)}\r\n                validationSchema={schema}>\r\n                {\r\n                    ({ handleChange, handleBlur, handleSubmit, touched, errors, values }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <FullPageHeader handleToggle={handleToogle} title=\"Edit Sentences\" />\r\n                            <Container className=\"py-3\">\r\n                                <Form.Group>\r\n                                    <Form.Label>Base Sentence</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"Enter the base sentence\" name=\"label\"\r\n                                        onChange={handleChange} onBlur={handleBlur} value={values.label}\r\n                                        isInvalid={touched.label && !!errors.label} />\r\n\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.label}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <div className=\"p-3 bg-light border rounded\">\r\n                                    <FieldArray name=\"sentences\">\r\n                                        {\r\n                                            () => (\r\n                                                <React.Fragment>\r\n                                                    {\r\n                                                        values.sentences.length > 0 && values.sentences.map((item: any, index: number) => (\r\n                                                            <Form.Group key={'tesen' + index}>\r\n                                                                <Form.Label>{item.tense}</Form.Label>\r\n                                                                <Form.Control autoComplete=\"off\" size=\"sm\" placeholder={`Switch the base sentense to the ${item.tense} tense`} name={`sentences.${index}.sentence`}\r\n                                                                    onChange={handleChange} onBlur={handleBlur} value={values.sentences[index].sentence}\r\n                                                                    isInvalid={touched.sentences && !!errors.sentences} />\r\n\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    This field is required\r\n                                                                </Form.Control.Feedback>\r\n                                                            </Form.Group>\r\n                                                        ))\r\n                                                    }\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n                                    </FieldArray>\r\n                                </div>\r\n                            </Container>\r\n\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n            <Snackbar />\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { TensePracticeModel } from '../../../../model/app.model';\r\nimport { FullPageHeader } from '../../../../components/FullPageContainer';\r\nimport { Form, Container } from 'react-bootstrap';\r\nimport { Formik, FieldArray } from 'formik';\r\n\r\nimport * as yup from 'yup';\r\nimport { AddProps } from '../../words/shared/words.model';\r\nimport { useSharedContext } from '../../../../Context';\r\nimport { useSnackbar } from '../../../../components/Snackbar';\r\nimport { v4 } from 'uuid';\r\nimport { addTense } from '../../../../store/actions/tenses.actions';\r\n\r\nconst INITIAL_VALUES: TensePracticeModel = {\r\n    label: '',\r\n    sentences: [\r\n        { tense: 'Present Simple', sentence: '' },\r\n        { tense: 'Present Progressive', sentence: '' },\r\n        { tense: 'Present Perfect', sentence: '' },\r\n        { tense: 'Present Perfect Prgressive', sentence: '' },\r\n        { tense: 'Past Simple', sentence: '' },\r\n        { tense: 'Past Progressive', sentence: '' },\r\n        { tense: 'Past Perfect', sentence: '' },\r\n        { tense: 'Past Perfect Prgressive', sentence: '' },\r\n        { tense: 'Future Simple', sentence: '' },\r\n        { tense: 'Future Progressive', sentence: '' },\r\n        { tense: 'Future Perfect', sentence: '' },\r\n        { tense: 'Future Perfect Prgressive', sentence: '' },\r\n    ]\r\n};\r\n\r\nconst schema = yup.object().shape({\r\n    label: yup.string().required('This field is required'),\r\n    sentences: yup.array().of(\r\n        yup.object().shape({\r\n            sentence: yup.string().required(),\r\n        })\r\n    )\r\n})\r\n\r\nexport const NewSentences: React.FC<AddProps> = ({ handleToogle, saveByKey }) => {\r\n\r\n    const { dispatch } = useSharedContext();\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n\r\n    const create = async (values: TensePracticeModel, resetForm: ()=> void) => {\r\n        try {\r\n            const id = v4();\r\n            const res = await saveByKey({ ...values, id }, id);\r\n            if (res.success) {\r\n                showMsg('created', res.message);\r\n                dispatch(addTense({ ...values, id }));\r\n                resetForm();\r\n            }\r\n            else {\r\n                showMsg('Failed to Created', res.message, 'warning');\r\n            }\r\n\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik initialValues={INITIAL_VALUES} onSubmit={(values, {resetForm}) => create(values, resetForm)}\r\n                validationSchema={schema}>\r\n                {\r\n                    ({ handleChange, handleBlur, handleSubmit, touched, errors, values }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <FullPageHeader handleToggle={handleToogle} title=\"build Sentences\" />\r\n                            <Container className=\"py-3\">\r\n                                <Form.Group>\r\n                                    <Form.Label>Base Sentence</Form.Label>\r\n                                    <Form.Control autoComplete=\"off\" size=\"sm\" placeholder=\"Enter the base sentence\" name=\"label\"\r\n                                        onChange={handleChange} onBlur={handleBlur} value={values.label}\r\n                                        isInvalid={touched.label && !!errors.label} />\r\n\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.label}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <div className=\"p-3 bg-light border rounded\">\r\n                                    <FieldArray name=\"sentences\">\r\n                                        {\r\n                                            () => (\r\n                                                <React.Fragment>\r\n                                                    {\r\n                                                        values.sentences.length > 0 && values.sentences.map((item: any, index: number) => (\r\n                                                            <Form.Group key={'tesen' + index}>\r\n                                                                <Form.Label>{item.tense}</Form.Label>\r\n                                                                <Form.Control autoComplete=\"off\" size=\"sm\" placeholder={`Switch the base sentense to the ${item.tense} tense`} name={`sentences.${index}.sentence`}\r\n                                                                    onChange={handleChange} onBlur={handleBlur} value={values.sentences[index].sentence}\r\n                                                                    isInvalid={touched.sentences && !!errors.sentences} />\r\n\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    This field is required\r\n                                                                </Form.Control.Feedback>\r\n                                                            </Form.Group>\r\n                                                        ))\r\n                                                    }\r\n                                                </React.Fragment>\r\n                                            )\r\n                                        }\r\n                                    </FieldArray>\r\n                                </div>\r\n                            </Container>\r\n\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n            <Snackbar />\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { useConfirmDialog } from '../../../components/ConfirmDialog';\r\nimport { FullPageContainer } from '../../../components/FullPageContainer';\r\nimport { useToggleState } from '../../../components/useToggleState';\r\nimport { AppState } from '../../../model/app.model';\r\nimport { deleteTense, getTenses } from '../../../store/actions/tenses.actions';\r\nimport { PaginatedFiltrableList } from '../words/shared/PaginatedFiltrableList';\r\nimport { Subject } from '../words/shared/Subject';\r\nimport { EditSentences } from './EditSentences';\r\nimport { NewSentences } from './NewSentences';\r\nimport { useSharedContext } from '../../../Context';\r\nimport { Collections, useCache } from '../../../cache';\r\nimport { wordContentProps, WordEditProps, WordRemoveProps, wordsProps } from '../words/shared/words.model';\r\nimport { SentenceModal } from '../../../model/app.model';\r\n\r\nconst TensePractise: React.FC = () => {\r\n\r\n    const data = useSelector((appState: AppState) => appState.tenses);\r\n    const { dispatch } = useSharedContext();\r\n    const { find, findOneAndUpdate, findOneAndDelete, saveByKey } = useCache(Collections.TENSES);\r\n\r\n    useEffect(() => {\r\n        find().then((res) => {\r\n            if (res.success) {\r\n                dispatch(getTenses(res.data));\r\n            }\r\n            else {\r\n                console.log(res.message);\r\n            }\r\n        })\r\n        .catch(err => console.error(err));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <React.Fragment >\r\n            \r\n            <Subject\r\n                title=\"Add sentences\"\r\n                definition=\"\r\n                    Master English tenses by adding a sentence and convert it each time to a new tense.\r\n                \">\r\n                {\r\n                    (handleToggle) => (\r\n                        <NewSentences handleToogle={handleToggle} saveByKey = {saveByKey} />\r\n                    )\r\n                }\r\n            </Subject>\r\n\r\n            <PaginatedFiltrableList dataSource={data}>\r\n                {\r\n                    (item) => (\r\n                        <Word word={item} findOneAndUpdate = {findOneAndUpdate} findOneAndDelete = {findOneAndDelete} />\r\n                    )\r\n                }\r\n            </PaginatedFiltrableList>\r\n\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nconst Word: React.FC<wordsProps> = ({ word, findOneAndUpdate, findOneAndDelete }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ItemContent word={word} />\r\n\r\n            <div className=\"text-right\">\r\n                <EditItemContainer word = {word} findOneAndUpdate = {findOneAndUpdate} />\r\n                <RemoveItemContainer word = {word} findOneAndDelete = {findOneAndDelete} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst ItemContent: React.FC<wordContentProps> = ({ word }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                word?.sentences && (\r\n                    <React.Fragment>\r\n                        <h6>All Sentences</h6>\r\n                        {\r\n                            word.sentences.map((item: SentenceModal, idx: number) => (\r\n                                <details key={word.id + 'details' + idx}>\r\n                                    <summary style={{outline: 'none'}}>{item.tense}</summary>\r\n                                    <p className=\"text-secondary mb-2\">\r\n                                       \"{item.sentence}\"\r\n                                    </p>\r\n                                </details>\r\n                            ))\r\n                        }\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst EditItemContainer: React.FC<WordEditProps> = ({ word, findOneAndUpdate }) => {\r\n    const { handleToggle, show } = useToggleState();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button className=\"mr-2\" variant=\"primary\" size=\"sm\" onClick={handleToggle}>Update</Button>\r\n\r\n            <FullPageContainer show={show}>\r\n                <EditSentences word={word} handleToogle={handleToggle} findOneAndUpdate = {findOneAndUpdate} />\r\n            </FullPageContainer>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst RemoveItemContainer: React.FC<WordRemoveProps> = ({word, findOneAndDelete}) => {\r\n    const { dispatch } = useSharedContext();\r\n    const { ConfirmDialog, toggleConfirmMessage } = useConfirmDialog({\r\n        message: 'Are you sure you want to remove? This cannot be undone.',\r\n        onConfirmClick: onConfirm\r\n    });\r\n\r\n    async function onConfirm() {\r\n        try {\r\n            const res = await findOneAndDelete(word.id || '');\r\n            if (res.success) {\r\n                toggleConfirmMessage();\r\n                setTimeout(() => {\r\n                    dispatch(deleteTense(word.id || ''));\r\n                }, 0);\r\n            }\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    const removeItem = () => {\r\n        toggleConfirmMessage();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"danger\" size=\"sm\" onClick={removeItem}>Remove</Button>\r\n            <ConfirmDialog />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TensePractise;"],"sourceRoot":""}