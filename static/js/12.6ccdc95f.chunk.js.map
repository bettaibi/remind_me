{"version":3,"sources":["components/useToggleState/index.tsx","components/FullPageContainer/index.tsx","components/Snackbar/index.tsx","components/Dialog/index.tsx","components/useAssistant/index.tsx","components/ConfirmDialog/index.tsx","cache/db.ts","cache/useCache.ts","cache/collections.ts","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","components/ReusableAccordion/index.tsx","components/useFilter/index.tsx","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","components/CustomPagination/index.tsx","pages/Main/words/shared/PaginatedFiltrableList/index.tsx","pages/Main/words/shared/Subject/index.tsx","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","pages/Main/words/shared/WordContent/index.tsx","../node_modules/react-bootstrap-icons/dist/icons/volume-up.js","../node_modules/react-bootstrap-icons/dist/icons/chat-square-quote.js","store/actions/noun.actions.ts","pages/Main/words/Nouns/NewNoun/index.tsx","pages/Main/words/Nouns/EditNoun/index.tsx","pages/Main/words/Nouns/index.tsx"],"names":["useToggleState","useState","show","setShow","handleToggle","prev","handleShow","handleHide","FullPageContainer","children","portal","document","getElementById","ReactDOM","createPortal","className","onClick","e","stopPropagation","style","backgroundColor","FullPageHeader","title","variant","size","type","SnackbarContainer","isShown","message","Portal","zIndex","useSnackbar","snackbar","setSnackbar","showMsg","msg","setTimeout","Snackbar","useCallback","Dialog","handleClose","centered","headerText","onHide","Header","closeButton","Body","checkVoice","aVoice","localStorage","getItem","parseInt","useAssistant","synthRef","useRef","window","speechSynthesis","currentVoice","setCurrentVoice","voices","setVoices","useEffect","x","EnVoices","current","getVoices","filter","voice","lang","includes","clearTimeout","setAssistantVoice","setItem","toString","voiceHandler","text","utterThis","SpeechSynthesisUtterance","speak","changeAssistantVoice","newIndex","useConfirmDialog","obj","isLoading","setIsloading","onConfirmClick","ConfirmDialog","disabled","as","animation","role","aria-hidden","toggleConfirmMessage","db","Localbase","config","debug","toJson","success","data","useCache","collection","a","add","saved","key","label","trim","toLowerCase","doc","get","id","update","updated","set","delete","removed","datasource","list","found","save","saveByKey","findOneAndUpdate","setById","findOneAndDelete","drop","init","find","findOne","USERS","VERBS","ADJECTIVES","ADVERBS","NOUNS","PHRASALVERBS","LINKERS","TOPICS","THINGS","NOTES","IDIOMS","TENSES","GAMES","QA","TODOS","SelectableContext","React","createContext","context","displayName","AccordionToggle","forwardRef","_ref","ref","_ref$as","Component","eventKey","props","_objectWithoutPropertiesLoose","accordionOnClick","contextEventKey","useContext","AccordionContext","onSelect","useAccordionToggle","createElement","_extends","AccordionCollapse","Provider","value","Collapse","in","Children","only","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","bsPrefix","controlledProps","finalClassName","classNames","useBootstrapPrefix","Toggle","ReusableAccordion","defaultActiveKey","AccordionItems","Card","useFilter","dataSource","term","setTerm","filterHandler","item","PageItem","active","activeLabel","SafeAnchor","defaultProps","createButton","name","defaultValue","Button","_ref2","First","Prev","Ellipsis","Next","Last","Pagination","decoratedBsPrefix","Item","useCustomPagination","array","itemsPerPage","currentPage","setCurrentPage","visitedPages","slice","leng","length","slices","Math","ceil","nextSlice","previous","prevSlice","firstSlice","lastSlice","CustomPagination","Array","map","index","newSlice","PaginatedFiltrableList","Fragment","Control","placeholder","onChange","target","Subject","definition","CardImg","prefix","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","bg","border","body","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Link","Text","Footer","ImgOverlay","WordContent","word","spelling","category","comparative","superlative","past","pastParticipal","examples","synonyms","synonym","c","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","VolumeUp","color","rest","xmlns","viewBox","width","height","fill","d","propTypes","PropTypes","string","oneOfType","number","ChatSquareQuote","updateNoun","payload","UPDATE_NOUN","deleteNoun","DELETE_NOUN","INITIAL_VALUE","translation","schema","yup","shape","required","min","max","of","NewNoun","handleToogle","dispatch","useSharedContext","spellWord","w","create","values","resetForm","v4","res","ADD_NOUN","initialValues","onSubmit","validationSchema","handleBlur","handleChange","handleSubmit","errors","touched","Form","Container","Group","Label","spellCheck","autoComplete","onBlur","isInvalid","Feedback","Row","Col","xs","exmp","EditNoun","Word","EditItemContainer","RemoveItemContainer","Nouns","nouns","useSelector","appState","Collections","then","GET_NOUNS","console","log","catch","err","error"],"mappings":"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","file":"static/js/12.6ccdc95f.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\n\r\nexport const useToggleState = () =>{\r\n\r\n    const [show, setShow] = useState<boolean>(false);\r\n\r\n    const handleToggle = () => {\r\n        setShow(prev => !prev);\r\n    }\r\n\r\n    const handleShow = () =>{\r\n        setShow(true);\r\n    }\r\n\r\n    const handleHide = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    return {\r\n        show,\r\n        handleToggle,\r\n        handleShow,\r\n        handleHide\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\ninterface FullPageContainerProps{\r\n    show: boolean; \r\n}\r\n\r\nexport const FullPageContainer: React.FC<FullPageContainerProps> = ({ children, show }) => {\r\n\r\n    const portal: any = document.getElementById('portal');\r\n \r\n    const handleClick = (e: any) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    if(!show) return null;\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n\r\n            <div className=\"z-9999 full-page-container\" onClick={handleClick} style = {{backgroundColor: '#fafafa'}}>\r\n                <div className=\"overflow-auto\">\r\n                    {children}\r\n                </div>\r\n            </div>\r\n            ,\r\n            portal\r\n        )\r\n    )\r\n}\r\n\r\ninterface FullPageHeaderProps {\r\n    title: string;\r\n    handleToggle: () => void;\r\n}\r\n\r\nexport const FullPageHeader: React.FC<FullPageHeaderProps> = ({ title, handleToggle }) => {\r\n\r\n    return (\r\n        <div className=\"p-3 border-bottom d-flex align-items-center justify-content-between sticky-top bg-light\">\r\n            <h6 className=\"m-0\">{title}</h6>\r\n            <div className=\"text-right\">\r\n                <Button variant=\"secondary\" className=\"mr-2\" size=\"sm\"\r\n                    onClick={handleToggle}>Close</Button>\r\n                <Button variant=\"primary\" size=\"sm\" type=\"submit\"\r\n                >Save</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\ntype snackbarType = \"info\" | \"danger\" | \"warning\" | \"success\";\r\n\r\ninterface SnackbarState {\r\n    title: string;\r\n    isShown: boolean;\r\n    message: string;\r\n    type?: snackbarType\r\n}\r\n\r\nconst SnackbarContainer: React.FC<SnackbarState> = ({ isShown, message, type, title }) => {\r\n    const Portal: any = document.getElementById('portal');\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n                <Alert className=\"m-3 fixed-top\" show={isShown} variant={type} style={{zIndex: 9999999999}}>\r\n                    <h5>{title}</h5>\r\n                    <p className=\"m-0\">\r\n                        {message}\r\n                    </p>\r\n                </Alert>,\r\n            Portal\r\n        )\r\n    )\r\n}\r\n\r\nexport const useSnackbar = () => {\r\n    const [snackbar, setSnackbar] = useState<SnackbarState>({title: '', isShown: false, message: '', type: 'success' });\r\n\r\n    const showMsg = (title: string, msg: string, type?: snackbarType) => {\r\n        setSnackbar({ isShown: true, message: msg, title, type: type || 'success' });\r\n\r\n        setTimeout(()=>{\r\n            setSnackbar({...snackbar, isShown: false });\r\n        }, 3000);\r\n    }\r\n\r\n    const Snackbar = useCallback(\r\n        () => (\r\n            <SnackbarContainer\r\n                message={snackbar.message}\r\n                isShown={snackbar.isShown}\r\n                type={snackbar.type}\r\n                title = {snackbar.title}\r\n            />\r\n        ),\r\n        [snackbar]\r\n    )\r\n\r\n    return {\r\n        showMsg,\r\n        Snackbar\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\ninterface DialogProps{\r\n    show: boolean;\r\n    centered: boolean;\r\n    size?: \"sm\" | \"lg\" | \"xl\" | undefined;\r\n    headerText?: string;\r\n    handleClose: () => void;\r\n}\r\n\r\nexport const Dialog: React.FC<DialogProps> = ({show, handleClose, centered, size, children, headerText}) => {\r\n\r\n    return (\r\n        <Modal \r\n        show={show} \r\n        onHide={handleClose}\r\n        centered={centered}\r\n        size={size}\r\n        >\r\n\r\n       { headerText && <Modal.Header closeButton>\r\n          <h6 className=\"m-0 align-self-center\">{headerText}</h6>\r\n        </Modal.Header>}\r\n\r\n        <Modal.Body>\r\n            {children}\r\n        </Modal.Body>\r\n\r\n      </Modal>\r\n    )\r\n}","import { useRef, useState, useEffect} from \"react\";\r\n\r\nfunction checkVoice(){\r\n    const aVoice = localStorage.getItem('a_voice');\r\n    const defaultVoice = typeof aVoice === 'string'? parseInt(aVoice): 0;\r\n    return defaultVoice;\r\n}\r\n\r\nconst useAssistant = () =>{\r\n   const synthRef  = useRef(window.speechSynthesis);\r\n   const [currentVoice, setCurrentVoice] = useState<number>(checkVoice);\r\n   const [voices, setVoices] = useState<SpeechSynthesisVoice[]>([]);\r\n\r\n   useEffect(()=>{\r\n    const x = setTimeout(()=>{\r\n      const EnVoices = synthRef.current\r\n      .getVoices()\r\n      .filter((voice) => voice.lang.includes(\"en\"));\r\n\r\n      setVoices(EnVoices);\r\n    }, 2000);\r\n\r\n    return ()=>{clearTimeout(x)}\r\n  }, []);\r\n\r\n   const setAssistantVoice = () =>{\r\n     localStorage.setItem('a_voice', currentVoice.toString());\r\n   }\r\n   \r\n   const changeAssistantVoice = (newIndex: number) =>{\r\n    setCurrentVoice(newIndex);\r\n  }\r\n\r\n   const voiceHandler = (text: string) => {\r\n        let utterThis: SpeechSynthesisUtterance = new SpeechSynthesisUtterance(text);\r\n        if(currentVoice){\r\n            utterThis.voice = voices[currentVoice];\r\n        }\r\n        synthRef.current.speak(utterThis);\r\n   };\r\n\r\n    return {\r\n        currentVoice,\r\n        setAssistantVoice,\r\n        voiceHandler,\r\n        changeAssistantVoice,\r\n        voices\r\n    }\r\n};\r\n\r\nexport default useAssistant;","import { useCallback, useEffect, useState } from 'react';\r\nimport { Dialog } from '../Dialog';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { useToggleState } from '../useToggleState';\r\n\r\ninterface ConfirmDialogProps {\r\n    message: string;\r\n    onConfirmClick: () => void;\r\n}\r\n\r\nexport const useConfirmDialog = (obj: ConfirmDialogProps) => {\r\n    const { handleToggle, show, handleHide } = useToggleState();\r\n    const [isLoading, setIsloading] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            setIsloading(false);\r\n        }\r\n    }, []);\r\n\r\n    const toggleConfirmMessage = () => {\r\n        handleToggle();\r\n    };\r\n\r\n    const { message, onConfirmClick } = obj;\r\n\r\n    const ConfirmDialog = useCallback(\r\n        () => (\r\n            <Dialog show={show} centered={true} size=\"sm\" handleClose={handleHide}>\r\n                <h6>Confirm</h6>\r\n                <p>\r\n                    {message}\r\n                </p>\r\n                <div className=\"text-right\">\r\n                    <Button className=\"mr-2\" variant=\"secondary\" onClick={handleHide} size=\"sm\">Close</Button>\r\n                    <Button variant=\"primary\" size=\"sm\" onClick={onConfirmClick} disabled={isLoading}>\r\n                        {!isLoading ? 'Confirm' : (\r\n                            <>\r\n                                <Spinner\r\n                                    as=\"span\"\r\n                                    animation=\"border\"\r\n                                    size=\"sm\"\r\n                                    role=\"status\"\r\n                                    aria-hidden=\"true\"\r\n                                />\r\n                                <span className=\"ml-2\">Loading...</span>\r\n                            </>\r\n                        )}\r\n                    </Button>\r\n                </div>\r\n            </Dialog>\r\n        ),\r\n        [show, message, onConfirmClick, handleHide, isLoading]\r\n    )\r\n\r\n    return {\r\n        ConfirmDialog,\r\n        toggleConfirmMessage,\r\n        setIsloading\r\n    }\r\n}\r\n","// @ts-ignore\r\nimport Localbase from 'localbase';\r\n\r\nlet db = new Localbase('remindMe');\r\n\r\ndb.config.debug = false\r\n\r\nexport default db;","import { CustomResponse } from \"../model/app.model\";\r\nimport db from './db';\r\n\r\nconst toJson = (success: boolean, msg: string, data?: any): CustomResponse => {\r\n    return {\r\n        message: msg,\r\n        success,\r\n        data\r\n    };\r\n};\r\n\r\nconst useCache = (collection: string) => {\r\n\r\n    async function save (obj: any): Promise<CustomResponse> {\r\n        try{\r\n            const saved = await db.collection(collection).add(obj);\r\n            return toJson(true, 'New record has been added', saved);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to create');\r\n        }\r\n    };\r\n\r\n    async function saveByKey (obj: any, key: string): Promise<CustomResponse> {\r\n        try{\r\n            const label = obj.label.trim().toLowerCase();\r\n            const found = await db.collection(collection).doc({label}).get();\r\n            if(found){\r\n                return toJson(false, `The word ${label} already exsist!`);\r\n            }\r\n            const saved = await db.collection(collection).add({\r\n                ...obj, \r\n                label: label\r\n            }, key);\r\n            return toJson(true, 'New record has been added', saved);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to persist a new Word');\r\n        }\r\n    };\r\n\r\n    async function findOneAndUpdate (obj: any, id: string): Promise<CustomResponse> {\r\n        try{\r\n            const updated = await db.collection(collection).doc({id}).update({\r\n                ...obj,\r\n                label: obj.label.trim().toLowerCase()\r\n            });\r\n            return toJson(true, 'New record has been updated', updated);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to update');\r\n        }\r\n    };\r\n\r\n    async function setById (obj: any, id: string): Promise<CustomResponse> {\r\n        try{\r\n            const doc = await db.collection(collection).doc({id}).set(obj);\r\n            return toJson(true, 'New record has been overwrited', doc);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to overwrite');\r\n        }\r\n    };\r\n\r\n    async function findOneAndDelete (id: string): Promise<CustomResponse> {\r\n        try{\r\n            const removed = await db.collection(collection).doc({id}).delete();\r\n            return toJson(true, 'New record has been removed', removed);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function drop (): Promise<CustomResponse> {\r\n        try{\r\n            await db.collection(collection).delete();\r\n            return toJson(true, 'The whole collection has been removed');\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function init (data: any[]): Promise<CustomResponse> {\r\n        try{\r\n            const datasource = await db.collection(collection).set(data);\r\n            return toJson(true, 'Init the whole collection', datasource);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to remove');\r\n        }\r\n    };\r\n\r\n    async function find (): Promise<CustomResponse> {\r\n        try{\r\n            const list = await db.collection(collection).get();\r\n            return toJson(true, 'list of data', list);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to get');\r\n        }\r\n    };\r\n\r\n    async function findOne (id: string): Promise<CustomResponse> {\r\n        try{\r\n            const found = await db.collection(collection).doc({id}).get();\r\n            return toJson(true, 'find a document', found);\r\n        }\r\n        catch(err){\r\n            return toJson(false, 'Failed to get');\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        save,\r\n        saveByKey,\r\n        findOneAndUpdate,\r\n        setById,\r\n        findOneAndDelete,\r\n        drop,\r\n        init,\r\n        find,\r\n        findOne\r\n    }\r\n}\r\n\r\nexport default useCache;","export const USERS = \"USERS\",\r\nVERBS = \"VERBS\",\r\nADJECTIVES = \"ADJECTIVES\",\r\nADVERBS = \"ADVERBS\",\r\nNOUNS = \"NOUNS\",\r\nPHRASALVERBS = \"PHRASALVERBS\",\r\nLINKERS = \"LINKERS\",\r\nTOPICS = \"TOPICS\",\r\nTHINGS = \"THINGS\",\r\nNOTES = \"NOTES\",\r\nIDIOMS = \"IDIOMS\",\r\nTENSES = \"TENSES\",\r\nGAMES = \"GAMES\",\r\nQA = \"QA\",\r\nTODOS = \"TODOS\";","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React from 'react';\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { ChevronRight } from 'react-bootstrap-icons';\r\n\r\nexport const ReusableAccordion: React.FC = ({children}) =>{\r\n\r\n    return(\r\n        <Accordion defaultActiveKey=\"ev0\" className=\"mt-3\">\r\n            {\r\n                children\r\n            }\r\n        </Accordion>\r\n    )\r\n}\r\n\r\ninterface AccordionItemsProps{\r\n    eventKey: string;\r\n    headerText: string;\r\n}\r\n\r\nexport const AccordionItems: React.FC<AccordionItemsProps> = ({children, eventKey, headerText }) => {\r\n\r\n    return (\r\n        <Card>\r\n            <Accordion.Toggle className=\"bg-light d-flex flex-row justify-content-between\" as={Card.Header} eventKey={eventKey}>\r\n                <p className=\"m-0 text-capitalize\">{headerText}</p>\r\n                <ChevronRight />\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey={eventKey}>\r\n                <Card.Body>\r\n                  {\r\n                      children\r\n                  }\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useFilter = (dataSource: any[]) => {\r\n    const [term, setTerm] = useState<string>('');\r\n\r\n    function filterHandler(){\r\n        if(term === ''){\r\n            return [...dataSource];\r\n        }\r\n        else{\r\n            return [...dataSource.filter((item: any)=> item.label.toLowerCase().includes(term.toLowerCase()))];\r\n        }\r\n    }\r\n\r\n    return {\r\n        setTerm,\r\n        filterHandler\r\n    };\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport React from 'react';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  active: false,\n  disabled: false,\n  activeLabel: '(current)'\n};\nvar PageItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      style = _ref.style,\n      activeLabel = _ref.activeLabel,\n      children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"active\", \"disabled\", \"className\", \"style\", \"activeLabel\", \"children\"]);\n\n  var Component = active || disabled ? 'span' : SafeAnchor;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active: active,\n      disabled: disabled\n    })\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: \"page-link\",\n    disabled: disabled\n  }, props), children, active && activeLabel && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, activeLabel)));\n});\nPageItem.defaultProps = defaultProps;\nPageItem.displayName = 'PageItem';\nexport default PageItem;\n\nfunction createButton(name, defaultValue, label) {\n  if (label === void 0) {\n    label = name;\n  }\n\n  function Button(_ref2) {\n    var children = _ref2.children,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n    return /*#__PURE__*/React.createElement(PageItem, props, /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, children || defaultValue), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\"\n    }, label));\n  }\n\n  Button.displayName = name;\n  return Button;\n}\n\nexport var First = createButton('First', '«');\nexport var Prev = createButton('Prev', '‹', 'Previous');\nexport var Ellipsis = createButton('Ellipsis', '…', 'More');\nexport var Next = createButton('Next', '›');\nexport var Last = createButton('Last', '»');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\n\n/**\n * @property {PageItem} Item\n * @property {PageItem} First\n * @property {PageItem} Prev\n * @property {PageItem} Ellipsis\n * @property {PageItem} Next\n * @property {PageItem} Last\n */\nvar Pagination = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      size = _ref.size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"size\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, decoratedBsPrefix, size && decoratedBsPrefix + \"-\" + size)\n  }), children);\n});\nPagination.First = First;\nPagination.Prev = Prev;\nPagination.Ellipsis = Ellipsis;\nPagination.Item = PageItem;\nPagination.Next = Next;\nPagination.Last = Last;\nexport default Pagination;","import { useState } from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\n\r\nexport const useCustomPagination = (array: any[], itemsPerPage: number) => {\r\n    \r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n\r\n    const visitedPages = currentPage * itemsPerPage;\r\n    let list = array.slice(visitedPages, visitedPages + itemsPerPage);\r\n\r\n    const leng = array.length;\r\n    const slices = Math.ceil(leng / itemsPerPage);\r\n\r\n    const nextSlice = () => {\r\n        if (currentPage < slices - 1) {\r\n            setCurrentPage((previous) => previous + 1);\r\n        }\r\n    };\r\n\r\n    const prevSlice = () => {\r\n        if (currentPage > 0) {\r\n            setCurrentPage((previous) => previous - 1);\r\n        }\r\n    };\r\n\r\n    const firstSlice = () => {\r\n        setCurrentPage(0);\r\n    };\r\n\r\n    const lastSlice = () => {\r\n        setCurrentPage(slices - 1);\r\n    };\r\n\r\n    const newSlice = (index: number) => {\r\n        setCurrentPage(index);\r\n    }\r\n\r\n    const CustomPagination = () => (\r\n\r\n        <Pagination>\r\n            <Pagination.First disabled={currentPage === 0} onClick={firstSlice} />\r\n            <Pagination.Prev disabled={currentPage === 0} onClick={prevSlice} />\r\n            {\r\n                [...Array(slices)].map((item, index) => (\r\n                    <Pagination.Item key={'slice' + index}\r\n                        active={currentPage === index} onClick={() => newSlice(index)} >\r\n                        {index + 1}\r\n                    </Pagination.Item>\r\n                ))\r\n            }\r\n            <Pagination.Next disabled={currentPage === (slices - 1)} onClick={nextSlice} />\r\n            <Pagination.Last disabled={currentPage === (slices - 1)} onClick={lastSlice} />\r\n        </Pagination>\r\n    )\r\n\r\n    return {\r\n        list,\r\n        CustomPagination\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport { useCustomPagination } from '../../../../../components/CustomPagination';\r\nimport { AccordionItems, ReusableAccordion } from '../../../../../components/ReusableAccordion';\r\nimport { useFilter } from '../../../../../components/useFilter';\r\n\r\ninterface PaginatedFiltrableListProps {\r\n    dataSource: any[];\r\n    children: (item: any) => JSX.Element;\r\n}\r\n\r\nexport const PaginatedFiltrableList: React.FC<PaginatedFiltrableListProps> = ({dataSource, children}) => {\r\n\r\n    const { setTerm, filterHandler } = useFilter([...dataSource]);\r\n    const { CustomPagination, list } = useCustomPagination(filterHandler(), 5);\r\n\r\n    const handleChange = (e: any) => {\r\n        setTerm(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Form>\r\n                <Form.Control type=\"search\" placeholder=\"Are you looking for a word? filter here!\" \r\n                onChange={handleChange} />\r\n            </Form>\r\n\r\n            <ReusableAccordion>\r\n\r\n                {\r\n                    <React.Fragment>\r\n                       {\r\n                               list.map((item: any, index: number) => (\r\n                                   <AccordionItems key={item.id}  eventKey={'ev' + index} headerText= {item.label} >\r\n                                       {children(item)}\r\n                                   </AccordionItems>\r\n                               ))\r\n                       }\r\n                   </React.Fragment>\r\n                }\r\n\r\n            </ReusableAccordion>\r\n\r\n            \r\n          { list.length > 0 && <div className=\"d-flex justify-content-end mt-3\">\r\n                <CustomPagination />\r\n            </div>}\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport { FullPageContainer } from '../../../../../components/FullPageContainer';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useToggleState } from '../../../../../components/useToggleState';\r\n\r\ninterface SubjectProps {\r\n    definition: string;\r\n    title: string;\r\n    children: ( handleToggle: () => void ) => JSX.Element;\r\n}\r\n\r\nexport const Subject: React.FC<SubjectProps> = ({title, definition, children}) => {\r\n    const { handleToggle, show } = useToggleState();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"border rounded p-3 bg-light mb-3\">\r\n                    <p >\r\n                        {definition}\r\n                    </p>\r\n                    <div className=\"text-right\">\r\n                        <Button variant=\"primary\" size=\"sm\" onClick={handleToggle}>{title}</Button>\r\n                    </div>\r\n            </div>\r\n\r\n        <FullPageContainer show={show}>\r\n            {children(handleToggle)}\r\n        </FullPageContainer>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from 'react';\r\nimport { ChatSquareQuote, VolumeUp } from 'react-bootstrap-icons';\r\nimport useAssistant from '../../../../../components/useAssistant';\r\nimport { wordContentProps } from '../words.model';\r\n\r\nconst WordContent: React.FC<wordContentProps> = ({ word }) => {\r\n    const { voiceHandler } = useAssistant();\r\n\r\n    const spell = () => {\r\n        voiceHandler(word.label);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex flex-row justify-content-between mb-1\">\r\n                <span className=\"fw-500\">Word</span>\r\n\r\n                <div>\r\n                    <span className=\"mr-2 text-muted\">/ {word.spelling} /</span>\r\n                    <span className=\"text-muted icons\" onClick={spell}>\r\n                        <VolumeUp size=\"20\" />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n           \r\n            <div className=\"mb-2\">\r\n                <span className=\"text-secondary\">\r\n                    {word.label} {word?.category ? '('+word.category+')': ''}\r\n                    {word?.comparative ? ', ' + word.comparative: ''}\r\n                    {word?.superlative ? ', ' + word.superlative: ''}\r\n                    {word?.past ? ', ' + word.past: ''}\r\n                    {word?.pastParticipal ? ', ' + word.pastParticipal: ''}\r\n                </span>\r\n            </div>\r\n\r\n            <h6 className=\"text-dark\">Definition</h6>\r\n            <p className=\"text-secondary mb-2\">{word.definition}</p>\r\n            <h6>Examples</h6>\r\n                {\r\n                    word.examples.map((item: string, index: number) => (\r\n                        <p key={word.id + 'exmp' + index} className=\"text-secondary mb-2\">\r\n                            <span className=\"mr-2\">\r\n                                <ChatSquareQuote />\r\n                            </span>\r\n                            {\r\n                                item\r\n                            }\r\n                        </p>\r\n                    ))\r\n                }\r\n                {\r\n                  word?.synonyms &&  word.synonyms[0] !== \"\" && (\r\n                        <React.Fragment>\r\n                            <h6>Synonyms</h6>\r\n                            <div className=\"d-flex flex-row flex-wrap\">\r\n                                {\r\n                                   word.synonyms.map((synonym: string, c: number) => (\r\n                                        <span key={'sy' + c} className=\"border rounded-lg text-secondary py-1 px-2 mr-2 my-1\">{synonym}</span>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default WordContent;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar VolumeUp = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.025 8a4.486 4.486 0 0 1-1.318 3.182L8 10.475A3.489 3.489 0 0 0 9.025 8c0-.966-.392-1.841-1.025-2.475l.707-.707A4.486 4.486 0 0 1 10.025 8zM7 4a.5.5 0 0 0-.812-.39L3.825 5.5H1.5A.5.5 0 0 0 1 6v4a.5.5 0 0 0 .5.5h2.325l2.363 1.89A.5.5 0 0 0 7 12V4zM4.312 6.39L6 5.04v5.92L4.312 9.61A.5.5 0 0 0 4 9.5H2v-3h2a.5.5 0 0 0 .312-.11z\"\n  }));\n});\nVolumeUp.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nVolumeUp.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default VolumeUp;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ChatSquareQuote = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1h-2.5a2 2 0 0 0-1.6.8L8 14.333 6.1 11.8a2 2 0 0 0-1.6-.8H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2.5a1 1 0 0 1 .8.4l1.9 2.533a1 1 0 0 0 1.6 0l1.9-2.533a1 1 0 0 1 .8-.4H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.066 4.76A1.665 1.665 0 0 0 4 5.668a1.667 1.667 0 0 0 2.561 1.406c-.131.389-.375.804-.777 1.22a.417.417 0 1 0 .6.58c1.486-1.54 1.293-3.214.682-4.112zm4 0A1.665 1.665 0 0 0 8 5.668a1.667 1.667 0 0 0 2.561 1.406c-.131.389-.375.804-.777 1.22a.417.417 0 1 0 .6.58c1.486-1.54 1.293-3.214.682-4.112z\"\n  }));\n});\nChatSquareQuote.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nChatSquareQuote.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default ChatSquareQuote;","import { ActionForm } from './ActionForm';\r\nimport { GET_NOUNS, DELETE_NOUN, UPDATE_NOUN, ADD_NOUN } from './types';\r\n\r\nexport const getNouns = (payload: any): ActionForm =>{\r\n\r\n    return{\r\n        type: GET_NOUNS,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const addNoun = (payload: any): ActionForm => {\r\n\r\n    return{\r\n        type: ADD_NOUN,\r\n        payload\r\n    }\r\n};\r\n\r\nexport const updateNoun = (id: string, payload: any): ActionForm => {\r\n\r\n    return{\r\n        type: UPDATE_NOUN,\r\n        payload,\r\n        id\r\n    }\r\n};\r\n\r\nexport const deleteNoun = (id: string): ActionForm => {\r\n\r\n    return{\r\n        type: DELETE_NOUN,\r\n        id\r\n    }\r\n};","import React from 'react';\r\nimport { FullPageHeader } from '../../../../../components/FullPageContainer';\r\nimport { NounModel } from '../../../../../model/app.model';\r\nimport { FieldArray, Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Form, Col, Container } from 'react-bootstrap';\r\nimport { VolumeUp } from 'react-bootstrap-icons';\r\nimport useAssistant from '../../../../../components/useAssistant';\r\nimport { AddProps } from '../../shared/words.model';\r\nimport { useSharedContext } from '../../../../../Context';\r\nimport { useSnackbar } from '../../../../../components/Snackbar';\r\nimport { v4 } from 'uuid';\r\nimport { addNoun } from '../../../../../store/actions/noun.actions';\r\n\r\nconst INITIAL_VALUE: NounModel = {\r\n    label: '',\r\n    definition: '',\r\n    examples: ['', '', ''],\r\n    synonyms: ['', ''],\r\n    translation: '',\r\n    spelling: ''\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n    label: yup.string().required('This field is required').min(2, 'too short').max(40, 'too much'),\r\n    definition: yup.string().required('This field is required'),\r\n    translation: yup.string().required('This field is required'),\r\n    examples: yup.array().of(\r\n        yup.string().required()\r\n    ),\r\n    synonyms: yup.array().of(\r\n        yup.string()\r\n    ),\r\n    spelling: yup.string().required('This is a required field')\r\n})\r\n\r\nexport const NewNoun: React.FC<AddProps> = ({ handleToogle, saveByKey }) => {\r\n    const { dispatch } = useSharedContext();\r\n    const { voiceHandler } = useAssistant();\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n\r\n    const spellWord = (w: string) => {\r\n        if (w) {\r\n            voiceHandler(w);\r\n        }\r\n    }\r\n\r\n    const create = async (values: NounModel, resetForm: ()=> void) => {\r\n        try{\r\n            const id = v4();\r\n            const res = await saveByKey({...values, id}, id);\r\n            if(res.success){\r\n                showMsg('created', res.message);\r\n                dispatch(addNoun({...values, id}));\r\n                resetForm();\r\n            }\r\n            else{\r\n                showMsg('Failed to Created', res.message , 'warning');\r\n            }\r\n            \r\n        }\r\n        catch(err){\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n            <Formik initialValues={INITIAL_VALUE} onSubmit={(value, {resetForm}) => create(value, resetForm)} validationSchema={schema}>\r\n            {\r\n                ({ handleBlur, handleChange, handleSubmit, errors, touched, values }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <FullPageHeader handleToggle={handleToogle} title=\"New Noun\" />\r\n                        <Container className=\"py-3\">\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>\r\n                                    <span>Label</span>\r\n                                    <span className=\"ml-2 icons\" onClick={() => spellWord(values.label)} >\r\n                                        <VolumeUp size=\"20\" />\r\n                                    </span>\r\n                                </Form.Label>\r\n                                <Form.Control spellCheck=\"true\" placeholder=\"a word\" autoComplete=\"off\" name=\"label\" size=\"sm\"\r\n                                    onChange={handleChange} onBlur={handleBlur} value={values.label}\r\n                                    isInvalid={touched.label && !!errors.label}\r\n                                ></Form.Control>\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.label}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>Arabic Translation</Form.Label>\r\n                                    <Form.Control placeholder=\"translate to arabic\" autoComplete=\"off\" name=\"translation\" size=\"sm\"\r\n                                        onChange={handleChange} onBlur={handleBlur} value={values.translation}\r\n                                        isInvalid={touched.translation && !!errors.translation}\r\n                                    ></Form.Control>\r\n\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.translation}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label>\r\n                                        <span>\r\n                                            Spelling\r\n                                       </span>\r\n                                        <span className=\"ml-2 icons\" onClick={() => spellWord(values.spelling)} >\r\n                                            <VolumeUp size=\"20\" />\r\n                                        </span>\r\n                                    </Form.Label>\r\n                                    <Form.Control spellCheck=\"true\" placeholder=\"Spelling\" autoComplete=\"off\" name=\"spelling\" size=\"sm\"\r\n                                        onChange={handleChange} onBlur={handleBlur} value={values.spelling}\r\n                                        isInvalid={touched.spelling && !!errors.spelling}\r\n                                    ></Form.Control>\r\n\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {errors.spelling}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n\r\n\r\n                            </Form.Row>\r\n\r\n                            <FieldArray name=\"synonyms\">\r\n                                {\r\n                                    () => (\r\n                                        <React.Fragment>\r\n                                            {\r\n                                                values.synonyms.length > 0 && (\r\n                                                    <React.Fragment>\r\n                                                        <div className=\"mb-2\">\r\n                                                            <h6>Synonyms</h6>\r\n                                                            <small className=\"text-secondary\">Enter two synonyms related to inserted word (this section is optional). </small>\r\n                                                        </div>\r\n\r\n                                                        <Form.Row>\r\n                                                            {\r\n                                                                values.synonyms.map((item: string, index: number) => (\r\n                                                                    <Form.Group as={Col} xs=\"6\" key={'syno' + index}>\r\n                                                                        <Form.Label>Synonym {index + 1}: </Form.Label>\r\n                                                                        <Form.Control placeholder=\"synonym\" size=\"sm\" autoComplete=\"off\" name={`synonyms.${index}`}\r\n                                                                            onChange={handleChange} onBlur={handleBlur} value={values.synonyms[index]}\r\n                                                                        ></Form.Control>\r\n                                                                    </Form.Group>\r\n                                                                ))\r\n                                                            }\r\n                                                        </Form.Row>\r\n                                                    </React.Fragment>\r\n                                                )\r\n                                            }\r\n                                        </React.Fragment>\r\n                                    )\r\n                                }\r\n                            </FieldArray>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Definition / Meaning</Form.Label>\r\n                                <Form.Control spellCheck=\"true\" as=\"textarea\" placeholder=\"word definition\" size=\"sm\" autoComplete=\"off\" name=\"definition\"\r\n                                    onChange={handleChange} onBlur={handleBlur} value={values.definition}\r\n                                    isInvalid={touched.definition && !!errors.definition}\r\n                                ></Form.Control>\r\n\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {errors.definition}\r\n                                </Form.Control.Feedback>\r\n                            </Form.Group>\r\n\r\n                            <div className=\"mb-2\">\r\n                                <h6>Examples</h6>\r\n                                <small className=\"text-secondary\">Enter three sentences using the word that you would learn</small>\r\n                            </div>\r\n\r\n                            <FieldArray name=\"examples\">\r\n                                {\r\n                                    () => (\r\n                                        <div>\r\n\r\n                                            {\r\n                                                values.examples && values.examples.length > 0 &&\r\n                                                values.examples.map((exmp: string, index: number) => (\r\n                                                    <Form.Group key={'exp' + index}>\r\n                                                        <Form.Label>Sentence {index + 1}: </Form.Label>\r\n                                                        <Form.Control name={`examples.${index}`} as=\"textarea\" placeholder={'We are about writing sentence number ' + (index + 1)} size=\"sm\" autoComplete=\"off\"\r\n                                                            onChange={handleChange} onBlur={handleBlur} value={values.examples[index]}\r\n                                                            isInvalid={touched.examples && !!errors.examples} />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {`Sentence N° ${index + 1} is required`}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                ))\r\n                                            }\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </FieldArray>\r\n\r\n                        </Container>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        <Snackbar />\r\n      </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FullPageHeader } from '../../../../../components/FullPageContainer';\r\nimport { NounModel } from '../../../../../model/app.model';\r\nimport { FieldArray, Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Form, Col, Container } from 'react-bootstrap';\r\nimport { VolumeUp } from 'react-bootstrap-icons';\r\nimport useAssistant from '../../../../../components/useAssistant';\r\nimport { useSharedContext } from '../../../../../Context';\r\nimport { useSnackbar } from '../../../../../components/Snackbar';\r\nimport { EditProps } from '../../shared/words.model';\r\nimport { updateNoun } from '../../../../../store/actions/noun.actions';\r\n\r\nconst schema = yup.object().shape({\r\n    label: yup.string().required('This field is required').min(2, 'too short').max(40, 'too much'),\r\n    definition: yup.string().required('This field is required'),\r\n    translation: yup.string().required('This field is required'),\r\n    examples: yup.array().of(\r\n        yup.string().required()\r\n    ),\r\n    synonyms: yup.array().of(\r\n        yup.string()\r\n    ),\r\n    spelling: yup.string().required('This is a required field')\r\n})\r\n\r\nexport const EditNoun: React.FC<EditProps> = ({handleToogle, word, findOneAndUpdate}) => {\r\n    const { dispatch } = useSharedContext();\r\n    const { voiceHandler } = useAssistant();\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n\r\n    const spellWord = (w: string) => {\r\n        if (w) {\r\n            voiceHandler(w);\r\n        }\r\n    };\r\n\r\n    const update = async (values: NounModel) => { \r\n        try{\r\n            const id = word.id || '';\r\n            const res = await findOneAndUpdate(values, id);\r\n            if(res.success){\r\n                showMsg('Word updated', res.message);\r\n                dispatch(updateNoun(id, values));\r\n            }\r\n            else{\r\n                showMsg('Failed to update', res.message, 'danger');\r\n            }\r\n        }\r\n        catch(err){\r\n            throw err;\r\n        }\r\n    };\r\n    \r\n    const INITIAL_VALUE: NounModel = {\r\n        ...word\r\n    };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n              <Formik initialValues={INITIAL_VALUE} onSubmit={(value) => update(value)} validationSchema={schema}>\r\n              {\r\n                  ({ handleBlur, handleChange, handleSubmit, errors, touched, values }) => (\r\n                      <Form onSubmit={handleSubmit}>\r\n                          <FullPageHeader handleToggle={handleToogle} title=\"Edit Noun\" />\r\n                          <Container className=\"py-3\">\r\n  \r\n                              <Form.Group>\r\n                                  <Form.Label>\r\n                                      <span>Label</span>\r\n                                      <span className=\"ml-2 icons\" onClick={() => spellWord(values.label)} >\r\n                                          <VolumeUp size=\"20\" />\r\n                                      </span>\r\n                                  </Form.Label>\r\n                                  <Form.Control placeholder=\"a word\" autoComplete=\"off\" name=\"label\" size=\"sm\"\r\n                                      onChange={handleChange} onBlur={handleBlur} value={values.label}\r\n                                      isInvalid={touched.label && !!errors.label}\r\n                                  ></Form.Control>\r\n  \r\n                                  <Form.Control.Feedback type=\"invalid\">\r\n                                      {errors.label}\r\n                                  </Form.Control.Feedback>\r\n                              </Form.Group>\r\n  \r\n                              <Form.Row>\r\n                                  <Form.Group as={Col}>\r\n                                      <Form.Label>Arabic Translation</Form.Label>\r\n                                      <Form.Control placeholder=\"translate to arabic\" autoComplete=\"off\" name=\"translation\" size=\"sm\"\r\n                                          onChange={handleChange} onBlur={handleBlur} value={values.translation}\r\n                                          isInvalid={touched.translation && !!errors.translation}\r\n                                      ></Form.Control>\r\n  \r\n                                      <Form.Control.Feedback type=\"invalid\">\r\n                                          {errors.translation}\r\n                                      </Form.Control.Feedback>\r\n                                  </Form.Group>\r\n  \r\n                                  <Form.Group as={Col}>\r\n                                      <Form.Label>\r\n                                          <span>\r\n                                              Spelling\r\n                                         </span>\r\n                                          <span className=\"ml-2 icons\" onClick={() => spellWord(values.spelling)} >\r\n                                              <VolumeUp size=\"20\" />\r\n                                          </span>\r\n                                      </Form.Label>\r\n                                      <Form.Control placeholder=\"Spelling\" autoComplete=\"off\" name=\"spelling\" size=\"sm\"\r\n                                          onChange={handleChange} onBlur={handleBlur} value={values.spelling}\r\n                                          isInvalid={touched.spelling && !!errors.spelling}\r\n                                      ></Form.Control>\r\n  \r\n                                      <Form.Control.Feedback type=\"invalid\">\r\n                                          {errors.spelling}\r\n                                      </Form.Control.Feedback>\r\n                                  </Form.Group>\r\n  \r\n  \r\n                              </Form.Row>\r\n  \r\n                              <FieldArray name=\"synonyms\">\r\n                                  {\r\n                                      () => (\r\n                                          <React.Fragment>\r\n                                              {\r\n                                                  values.synonyms.length > 0 && (\r\n                                                      <React.Fragment>\r\n                                                          <div className=\"mb-2\">\r\n                                                              <h6>Synonyms</h6>\r\n                                                              <small className=\"text-secondary\">Enter two synonyms related to inserted word (this section is optional). </small>\r\n                                                          </div>\r\n  \r\n                                                          <Form.Row>\r\n                                                              {\r\n                                                                  values.synonyms.map((item: string, index: number) => (\r\n                                                                      <Form.Group as={Col} xs=\"6\" key={'syno' + index}>\r\n                                                                          <Form.Label>Synonym {index + 1}: </Form.Label>\r\n                                                                          <Form.Control placeholder=\"synonym\" size=\"sm\" autoComplete=\"off\" name={`synonyms.${index}`}\r\n                                                                              onChange={handleChange} onBlur={handleBlur} value={values.synonyms[index]}\r\n                                                                          ></Form.Control>\r\n                                                                      </Form.Group>\r\n                                                                  ))\r\n                                                              }\r\n                                                          </Form.Row>\r\n                                                      </React.Fragment>\r\n                                                  )\r\n                                              }\r\n                                          </React.Fragment>\r\n                                      )\r\n                                  }\r\n                              </FieldArray>\r\n  \r\n                              <Form.Group>\r\n                                  <Form.Label>Definition / Meaning</Form.Label>\r\n                                  <Form.Control as=\"textarea\" placeholder=\"word definition\" size=\"sm\" autoComplete=\"off\" name=\"definition\"\r\n                                      onChange={handleChange} onBlur={handleBlur} value={values.definition}\r\n                                      isInvalid={touched.definition && !!errors.definition}\r\n                                  ></Form.Control>\r\n  \r\n                                  <Form.Control.Feedback type=\"invalid\">\r\n                                      {errors.definition}\r\n                                  </Form.Control.Feedback>\r\n                              </Form.Group>\r\n  \r\n                              <div className=\"mb-2\">\r\n                                  <h6>Examples</h6>\r\n                                  <small className=\"text-secondary\">Enter three sentences using the word that you would learn</small>\r\n                              </div>\r\n  \r\n                              <FieldArray name=\"examples\">\r\n                                  {\r\n                                      () => (\r\n                                          <div>\r\n  \r\n                                              {\r\n                                                  values.examples && values.examples.length > 0 &&\r\n                                                  values.examples.map((exmp: string, index: number) => (\r\n                                                      <Form.Group key={'exp' + index}>\r\n                                                          <Form.Label>Sentence {index + 1}: </Form.Label>\r\n                                                          <Form.Control name={`examples.${index}`} as=\"textarea\" placeholder={'We are about writing sentence number ' + (index + 1)} size=\"sm\" autoComplete=\"off\"\r\n                                                              onChange={handleChange} onBlur={handleBlur} value={values.examples[index]}\r\n                                                              isInvalid={touched.examples && !!errors.examples} />\r\n                                                          <Form.Control.Feedback type=\"invalid\">\r\n                                                              {`Sentence N° ${index + 1} is required`}\r\n                                                          </Form.Control.Feedback>\r\n                                                      </Form.Group>\r\n                                                  ))\r\n                                              }\r\n                                          </div>\r\n                                      )\r\n                                  }\r\n                              </FieldArray>\r\n  \r\n                          </Container>\r\n                      </Form>\r\n                  )\r\n              }\r\n          </Formik>\r\n          <Snackbar />\r\n        </React.Fragment>\r\n      )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useConfirmDialog } from '../../../../components/ConfirmDialog';\r\nimport { NewNoun } from './NewNoun';\r\nimport { Subject } from '../shared/Subject';\r\nimport { PaginatedFiltrableList } from '../shared/PaginatedFiltrableList';\r\nimport { FullPageContainer } from '../../../../components/FullPageContainer';\r\nimport { EditNoun } from './EditNoun';\r\nimport { useToggleState } from '../../../../components/useToggleState';\r\nimport { AppState } from '../../../../model/app.model';\r\nimport { useSelector } from 'react-redux';\r\nimport { deleteNoun, getNouns } from '../../../../store/actions/noun.actions';\r\nimport { useSharedContext } from '../../../../Context';\r\nimport { Collections, useCache } from '../../../../cache';\r\nimport { WordEditProps, WordRemoveProps, wordsProps } from '../shared/words.model';\r\nimport WordContent from '../shared/WordContent';\r\n\r\nconst Nouns: React.FC = () => {\r\n    const nouns = useSelector((appState: AppState) => appState.nouns);\r\n    const { dispatch } = useSharedContext();\r\n    const { find, findOneAndUpdate, findOneAndDelete, saveByKey } = useCache(Collections.NOUNS);\r\n\r\n    useEffect(() => {\r\n        find().then((res) => {\r\n            if (res.success) {\r\n                dispatch(getNouns(res.data));\r\n            }\r\n            else {\r\n                console.log(res.message);\r\n            }\r\n        })\r\n        .catch(err => console.error(err));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Subject\r\n                title=\"New Noun\"\r\n                definition=\"\r\n                    A noun is a word used to identify any of a class of people, places or things.\r\n                \">\r\n                {\r\n                    (handleToggle) => (\r\n                        <NewNoun handleToogle={handleToggle} saveByKey={saveByKey} />\r\n                    )\r\n                }\r\n            </Subject>\r\n\r\n            <PaginatedFiltrableList dataSource={nouns}>\r\n                {\r\n                    (item) => (\r\n                        <Word word={item} findOneAndUpdate={findOneAndUpdate} findOneAndDelete={findOneAndDelete} />\r\n                    )\r\n                }\r\n            </PaginatedFiltrableList>\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst Word: React.FC<wordsProps> = ({ word, findOneAndUpdate, findOneAndDelete }) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <WordContent word={word} />\r\n\r\n            <div className=\"text-right mt-3\">\r\n                <EditItemContainer word={word} findOneAndUpdate={findOneAndUpdate} />\r\n                <RemoveItemContainer word={word} findOneAndDelete={findOneAndDelete} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst EditItemContainer: React.FC<WordEditProps> = ({ word, findOneAndUpdate }) => {\r\n    const { handleToggle, show } = useToggleState();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button className=\"mr-2\" variant=\"primary\" size=\"sm\" onClick={handleToggle}>Update</Button>\r\n\r\n            <FullPageContainer show={show}>\r\n                <EditNoun word={word} handleToogle={handleToggle} findOneAndUpdate={findOneAndUpdate} />\r\n            </FullPageContainer>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst RemoveItemContainer: React.FC<WordRemoveProps> = ({ word, findOneAndDelete }) => {\r\n    const { dispatch } = useSharedContext();\r\n    const { ConfirmDialog, toggleConfirmMessage } = useConfirmDialog({\r\n        message: 'Are you sure you want to remove this word? This cannot be undone.',\r\n        onConfirmClick: onConfirm\r\n    });\r\n\r\n    async function onConfirm() {\r\n        try {\r\n            const res = await findOneAndDelete(word.id || '');\r\n            if (res.success) {\r\n                toggleConfirmMessage();\r\n                setTimeout(() => {\r\n                    dispatch(deleteNoun(word.id || ''));\r\n                }, 0);\r\n            }\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    const removeItem = () => {\r\n        toggleConfirmMessage();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Button variant=\"danger\" size=\"sm\" onClick={removeItem}>Remove</Button>\r\n            <ConfirmDialog />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Nouns;"],"sourceRoot":""}