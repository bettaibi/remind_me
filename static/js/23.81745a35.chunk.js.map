{"version":3,"sources":["components/Snackbar/index.tsx","../node_modules/react-bootstrap/esm/SelectableContext.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionToggle.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/Accordion.js","components/ReusableAccordion/index.tsx","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Button.js","pages/Main/Profile/index.tsx"],"names":["SnackbarContainer","isShown","message","type","title","Portal","document","getElementById","ReactDOM","createPortal","className","show","variant","style","zIndex","useSnackbar","useState","snackbar","setSnackbar","showMsg","msg","setTimeout","Snackbar","useCallback","SelectableContext","React","createContext","context","displayName","AccordionToggle","forwardRef","_ref","ref","_ref$as","as","Component","children","eventKey","onClick","props","_objectWithoutPropertiesLoose","accordionOnClick","contextEventKey","useContext","AccordionContext","onSelect","e","useAccordionToggle","createElement","_extends","AccordionCollapse","Provider","value","Collapse","in","Children","only","Accordion","_useUncontrolled","useUncontrolled","activeKey","_useUncontrolled$as","bsPrefix","controlledProps","finalClassName","classNames","useBootstrapPrefix","Toggle","ReusableAccordion","defaultActiveKey","AccordionItems","headerText","Card","Header","Body","CardImg","prefix","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","bg","text","border","body","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Img","Title","Subtitle","Link","Text","Footer","ImgOverlay","Button","size","active","block","classes","href","SafeAnchor","disabled","userProfileSchema","yup","shape","required","photoUrl","userEmailSchema","newEmail","email","PasswordSettingSchema","password","min","newPassword","passwordConfirmation","oneOf","ProfileDetails","updateUserProfile","user","INITIAL_VALUES","photoURL","Fragment","initialValues","onSubmit","values","then","catch","err","update","validationSchema","handleBlur","handleSubmit","handleChange","touched","errors","Group","Label","Control","autoComplete","placeholder","name","onChange","onBlur","isInvalid","Feedback","EmailSetting","updateUserEmail","PasswordSetting","updateUserPassword","Profile","useSharedContext","signOut","window","location","reload","console","log"],"mappings":"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","file":"static/js/23.81745a35.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\ntype snackbarType = \"info\" | \"danger\" | \"warning\" | \"success\";\r\n\r\ninterface SnackbarState {\r\n    title: string;\r\n    isShown: boolean;\r\n    message: string;\r\n    type?: snackbarType\r\n}\r\n\r\nconst SnackbarContainer: React.FC<SnackbarState> = ({ isShown, message, type, title }) => {\r\n    const Portal: any = document.getElementById('portal');\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n                <Alert className=\"m-3 fixed-top\" show={isShown} variant={type} style={{zIndex: 9999999999}}>\r\n                    <h5>{title}</h5>\r\n                    <p className=\"m-0\">\r\n                        {message}\r\n                    </p>\r\n                </Alert>,\r\n            Portal\r\n        )\r\n    )\r\n}\r\n\r\nexport const useSnackbar = () => {\r\n    const [snackbar, setSnackbar] = useState<SnackbarState>({title: '', isShown: false, message: '', type: 'success' });\r\n\r\n    const showMsg = (title: string, msg: string, type?: snackbarType) => {\r\n        setSnackbar({ isShown: true, message: msg, title, type: type || 'success' });\r\n\r\n        setTimeout(()=>{\r\n            setSnackbar({...snackbar, isShown: false });\r\n        }, 3000);\r\n    }\r\n\r\n    const Snackbar = useCallback(\r\n        () => (\r\n            <SnackbarContainer\r\n                message={snackbar.message}\r\n                isShown={snackbar.isShown}\r\n                type={snackbar.type}\r\n                title = {snackbar.title}\r\n            />\r\n        ),\r\n        [snackbar]\r\n    )\r\n\r\n    return {\r\n        showMsg,\r\n        Snackbar\r\n    }\r\n\r\n}\r\n","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'AccordionContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport SelectableContext from './SelectableContext';\nimport AccordionContext from './AccordionContext';\nexport function useAccordionToggle(eventKey, onClick) {\n  var contextEventKey = useContext(AccordionContext);\n  var onSelect = useContext(SelectableContext);\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === contextEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"eventKey\", \"onClick\"]);\n\n  var accordionOnClick = useAccordionToggle(eventKey, onClick);\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props), children);\n});\nexport default AccordionToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport Collapse from './Collapse';\nimport AccordionContext from './AccordionContext';\nimport SelectableContext from './SelectableContext';\nvar AccordionCollapse = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"eventKey\"]);\n\n  var contextEventKey = useContext(AccordionContext); // Empty SelectableContext is to prevent elements in the collapse\n  // from collapsing the accordion when clicked.\n\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Collapse, _extends({\n    ref: ref,\n    in: contextEventKey === eventKey\n  }, props), /*#__PURE__*/React.createElement(\"div\", null, React.Children.only(children))));\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionToggle from './AccordionToggle';\nimport SelectableContext from './SelectableContext';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nvar Accordion = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      activeKey = _useUncontrolled.activeKey,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      children = _useUncontrolled.children,\n      className = _useUncontrolled.className,\n      onSelect = _useUncontrolled.onSelect,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"as\", \"activeKey\", \"bsPrefix\", \"children\", \"className\", \"onSelect\"]);\n\n  var finalClassName = classNames(className, useBootstrapPrefix(bsPrefix, 'accordion'));\n  return /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: activeKey || null\n  }, /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: onSelect || null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, controlledProps, {\n    className: finalClassName\n  }), children)));\n});\nAccordion.displayName = 'Accordion';\nAccordion.Toggle = AccordionToggle;\nAccordion.Collapse = AccordionCollapse;\nexport default Accordion;","import React from 'react';\r\nimport { Card, Accordion } from 'react-bootstrap';\r\nimport { ChevronRight } from 'react-bootstrap-icons';\r\n\r\nexport const ReusableAccordion: React.FC = ({children}) =>{\r\n\r\n    return(\r\n        <Accordion defaultActiveKey=\"ev0\" className=\"mt-3\">\r\n            {\r\n                children\r\n            }\r\n        </Accordion>\r\n    )\r\n}\r\n\r\ninterface AccordionItemsProps{\r\n    eventKey: string;\r\n    headerText: string;\r\n}\r\n\r\nexport const AccordionItems: React.FC<AccordionItemsProps> = ({children, eventKey, headerText }) => {\r\n\r\n    return (\r\n        <Card>\r\n            <Accordion.Toggle className=\"bg-light d-flex flex-row justify-content-between\" as={Card.Header} eventKey={eventKey}>\r\n                <p className=\"m-0 text-capitalize\">{headerText}</p>\r\n                <ChevronRight />\r\n            </Accordion.Toggle>\r\n\r\n            <Accordion.Collapse eventKey={eventKey}>\r\n                <Card.Body>\r\n                  {\r\n                      children\r\n                  }\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nvar Button = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      size = _ref.size,\n      active = _ref.active,\n      className = _ref.className,\n      block = _ref.block,\n      type = _ref.type,\n      as = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"variant\", \"size\", \"active\", \"className\", \"block\", \"type\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  var classes = classNames(className, prefix, active && 'active', variant && prefix + \"-\" + variant, block && prefix + \"-block\", size && prefix + \"-\" + size);\n\n  if (props.href) {\n    return /*#__PURE__*/React.createElement(SafeAnchor, _extends({}, props, {\n      as: as,\n      ref: ref,\n      className: classNames(classes, props.disabled && 'disabled')\n    }));\n  }\n\n  if (ref) {\n    props.ref = ref;\n  }\n\n  if (type) {\n    props.type = type;\n  } else if (!as) {\n    props.type = 'button';\n  }\n\n  var Component = as || 'button';\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    className: classes\n  }));\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport { AccordionItems, ReusableAccordion } from '../../../components/ReusableAccordion';\r\n\r\nimport * as yup from 'yup';\r\nimport { useSnackbar } from '../../../components/Snackbar';\r\nimport { useSharedContext } from '../../../Context';\r\n\r\nconst userProfileSchema = yup.object().shape({\r\n    displayName: yup.string().required('Name is required'),\r\n    photoUrl: yup.string().required('Photo url is required')\r\n});\r\nconst userEmailSchema = yup.object().shape({\r\n    newEmail: yup.string().email('Invalid Email').required('Email is required')\r\n});\r\nconst PasswordSettingSchema = yup.object().shape({\r\n    password: yup.string().required('Password is required')\r\n    .min(6, 'Password must have at least 6 letters'),\r\n    newPassword: yup.string().required('New Password is required')\r\n    .min(6, 'Password must have at least 6 letters'),\r\n    passwordConfirmation: yup.string().required('The Confirmation is required')\r\n    .min(6, 'Password must have at least 6 letters')\r\n    .oneOf([yup.ref('newPassword')], 'Password must much')\r\n});\r\n\r\nconst Profile: React.FC = () => {\r\n    const {signOut, updateUserEmail, updateUserPassword, updateUserProfile, user} = useSharedContext();\r\n\r\n    function logout() {\r\n        signOut().then(() => {\r\n            window.location.reload();\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"border rounded p-3 bg-light\">\r\n                <h6>Account Setting</h6>\r\n                <div className=\"text-right\">\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={() => logout()}>Signout</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <ReusableAccordion>\r\n                <AccordionItems eventKey=\"update_profile\" headerText=\"Profile Details\" >\r\n                    <ProfileDetails updateUserProfile={updateUserProfile} user={user} />\r\n                </AccordionItems>\r\n                <AccordionItems eventKey=\"ev0\" headerText=\"Email Setting\" >\r\n                    <EmailSetting updateUserEmail={updateUserEmail} user={user} />\r\n                </AccordionItems>\r\n                <AccordionItems eventKey=\"update_password\" headerText=\"Password Setting\" >\r\n                    <PasswordSetting updateUserPassword={updateUserPassword} />\r\n                </AccordionItems>\r\n            </ReusableAccordion>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface ProfileDetailsProps {\r\n    updateUserProfile: (displayName: string, photoUrl: string) => Promise<any>,\r\n    user: any;\r\n}\r\nconst ProfileDetails: React.FC<ProfileDetailsProps> = ({ updateUserProfile, user }) => {\r\n    const email = user ? user.email : 'Email not provided';\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n\r\n    const INITIAL_VALUES = {\r\n        displayName: user ? user.displayName : '',\r\n        photoUrl: user ? user.photoURL : '',\r\n    };\r\n\r\n    function update(values: any): void {\r\n        updateUserProfile(values.displayName, values.photoUrl).then(() => {\r\n            showMsg('Profile updated', 'your profile has been updated');\r\n        }).catch(err => {\r\n            showMsg('Failed to', err.message, 'warning');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Formik initialValues={INITIAL_VALUES} onSubmit={(values) => update(values)}\r\n            validationSchema={userProfileSchema}>\r\n            {\r\n                ({ handleBlur, handleSubmit, handleChange, touched, errors, values }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control size=\"sm\" value={email} disabled></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control size=\"sm\" autoComplete=\"off\" type=\"text\" placeholder=\"Enter your name\" name=\"displayName\"\r\n                                value={values.displayName} onChange={handleChange} onBlur={handleBlur}\r\n                                isInvalid={touched.displayName && !!errors.displayName} />\r\n\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.displayName}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Photo Url</Form.Label>\r\n                            <Form.Control size=\"sm\" autoComplete=\"off\" type=\"text\" placeholder=\"place here your photo url\" name=\"photoUrl\"\r\n                                value={values.photoUrl} onChange={handleChange} onBlur={handleBlur}\r\n                                isInvalid={touched.photoUrl && !!errors.photoUrl} />\r\n\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.photoUrl}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <div className=\"text-right\">\r\n                            <Button type=\"submit\" variant=\"primary\" size=\"sm\">Save</Button>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        <Snackbar />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface EmailSettingProps {\r\n    updateUserEmail: (newEmail: string) => Promise<any>,\r\n    user: any;\r\n}\r\nconst EmailSetting: React.FC<EmailSettingProps> = ({ updateUserEmail, user }) => {\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n    const email = user ? user.email : 'Email not provided';\r\n\r\n    const INITIAL_VALUES = {\r\n        newEmail: ''\r\n    };\r\n\r\n    function update(values: any): void {\r\n        updateUserEmail(values.newEmail).then(() => {\r\n            showMsg('Email updated', 'your email has been updated');\r\n        }).catch(err => {\r\n            showMsg('Failed to updated', err.message, 'warning');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n                    <Formik initialValues={INITIAL_VALUES} onSubmit={(values) => update(values)}\r\n            validationSchema={userEmailSchema}>\r\n            {\r\n                ({ handleBlur, handleSubmit, handleChange, touched, errors, values }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label>Current Email</Form.Label>\r\n                            <Form.Control size=\"sm\" value={email} disabled></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>New Email</Form.Label>\r\n                            <Form.Control size=\"sm\" autoComplete=\"off\" type=\"email\" placeholder=\"New email...\" name=\"newEmail\"\r\n                                value={values.newEmail} onChange={handleChange} onBlur={handleBlur}\r\n                                isInvalid={touched.newEmail && !!errors.newEmail} />\r\n\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.newEmail}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <div className=\"text-right\">\r\n                            <Button type=\"submit\" variant=\"primary\" size=\"sm\">Save</Button>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        <Snackbar />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface PasswordSettingProps {\r\n    updateUserPassword: (newPassword: string) => Promise<any>\r\n}\r\nconst PasswordSetting: React.FC<PasswordSettingProps> = ({ updateUserPassword }) => {\r\n    const { Snackbar, showMsg } = useSnackbar();\r\n\r\n    const INITIAL_VALUES = {\r\n        password: '',\r\n        newPassword: '',\r\n        passwordConfirmation: ''\r\n    };\r\n\r\n    function update(values: any): void {\r\n        updateUserPassword(values.newPassword).then(() => {\r\n            showMsg('Password updated', 'your password has been updated');\r\n        }).catch(err => {\r\n            showMsg('Failed to', err.message, 'warning');\r\n        });\r\n    };\r\n\r\n    return (\r\n       <React.Fragment>\r\n            <Formik initialValues={INITIAL_VALUES} onSubmit={(values) => update(values)}\r\n            validationSchema={PasswordSettingSchema}>\r\n            {\r\n                ({ handleBlur, handleSubmit, handleChange, touched, errors, values }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control size=\"sm\" autoComplete=\"off\" type=\"password\" placeholder=\"Current password...\" name=\"password\"\r\n                                value={values.password} onChange={handleChange} onBlur={handleBlur}\r\n                                isInvalid={touched.password && !!errors.password} />\r\n\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.password}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>New Password</Form.Label>\r\n                            <Form.Control size=\"sm\" autoComplete=\"off\" type=\"password\" placeholder=\"New password...\" name=\"newPassword\"\r\n                                value={values.newPassword} onChange={handleChange} onBlur={handleBlur}\r\n                                isInvalid={touched.newPassword && !!errors.newPassword} />\r\n\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.newPassword}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control size=\"sm\" autoComplete=\"off\" type=\"password\" placeholder=\"Confirm your password...\" name=\"passwordConfirmation\"\r\n                                value={values.passwordConfirmation} onChange={handleChange} onBlur={handleBlur}\r\n                                isInvalid={touched.passwordConfirmation && !!errors.passwordConfirmation} />\r\n\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.passwordConfirmation}\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <div className=\"text-right\">\r\n                            <Button type=\"submit\" variant=\"primary\" size=\"sm\">Save</Button>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        <Snackbar />\r\n       </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}