{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","pages/Main/GrammarSearch/index.tsx","store/actions/conjugation.actions.ts"],"names":["Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","schema","Yup","shape","query","required","max","TenseDisplay","payload","str","color","Fragment","Alert","map","tense","i","heading","forms","form","j","style","width","LoadingPage","arr","marginRight","item","n","useGrammar","data","useSelector","state","conjugations","useState","isLoading","setIsLoading","isError","setIsError","dispatch","useDispatch","conjugate","verb","a","axios","get","process","res","grammarSearch","then","result","type","GET_LAST_VERB_CONJUAGATED","catch","err","GrammarSearch","initialValue","conjugated_forms","initialValues","validationSchema","onSubmit","values","submit","handleBlur","handleChange","handleSubmit","touched","errors","Form","noValidate","Control","name","value","onChange","onBlur","isInvalid","placeholder","autoComplete","Feedback","index","conjugation_tables","indicative","conditional","passive"],"mappings":"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","file":"static/js/28.7d2774a0.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Form, Table, Alert } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport { AppState } from '../../../model/app.model';\r\nimport { setLatestConjugatedVerb } from '../../../store/actions/conjugation.actions';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst linguaApi = process.env.REACT_APP_GRAMMAR_API;\r\n\r\nconst schema = Yup.object().shape({\r\n    query: Yup.string().required('Enter a Verb to get its conjugations').max(25, 'Too much letters!')\r\n});\r\n\r\nconst GrammarSearch: React.FC = () => {\r\n    const { data, isLoading, isError, grammarSearch } = useGrammar();\r\n    const initialValue = data? {query: data.conjugated_forms[0]['1']}: {query: ''};\r\n\r\n    const submit = (values: any) => {\r\n        grammarSearch(values.query)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik initialValues={initialValue} validationSchema={schema} onSubmit={(values) => submit(values)}>\r\n                {\r\n                    ({ handleBlur, handleChange, handleSubmit, values, touched, errors }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Form.Control name=\"query\" value={values.query}\r\n                                onChange={handleChange} onBlur={handleBlur} \r\n                                isInvalid = {touched.query && !!errors.query} \r\n                                placeholder=\"Tap a verb and press enter\" required \r\n                                type=\"search\" autoComplete=\"off\"\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.query}\r\n                            </Form.Control.Feedback>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n            {\r\n                isLoading && <LoadingPage />\r\n            }\r\n            {\r\n                isError && <Alert className=\"mt-3\" variant=\"danger\">Oops, we could not find the verb that you have been looking for, please check your internet connection and try again.</Alert>\r\n            }\r\n            { data && !isLoading && <>\r\n                <div className=\"d-flex flex-row bg-light align-items-center justify-content-center flex-wrap border rounded my-3 p-3\">\r\n                        {\r\n                            data.conjugated_forms.map((item: any[], index: number) => (\r\n                                <div key={'form'+index} className=\"mx-2\">\r\n                                    <span className=\"text-secondary\">{item[0]}: </span>\r\n                                    <span className=\"text-secondary fw-600\">{item[1]}</span>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                </div>\r\n\r\n               <div className=\"bg-light pt-3 px-3 border rounded\">\r\n                <TenseDisplay payload={data.conjugation_tables.indicative} str='Indicative' color='text-success' variant=\"success\" />\r\n                <TenseDisplay payload={data.conjugation_tables.conditional} str='Conditional' color='text-info' variant=\"info\" />\r\n                <TenseDisplay payload={data.conjugation_tables.passive} str='Passive' color='text-danger' variant=\"danger\" />\r\n               </div>\r\n\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface TenseDisplayProps{\r\n    payload: any[];\r\n    str: string;\r\n    color: string;\r\n    variant: string;\r\n}\r\n\r\nconst TenseDisplay: React.FC<TenseDisplayProps> = ({payload, str, color, variant}) =>{\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Alert className=\"p-2 mb-3 mt-0 fw-600\" variant={variant}> {str} </Alert>\r\n            <div className=\"d-grid-2\">\r\n                {\r\n                    payload.map((tense: any, i: number)=> (\r\n                        <Table key={str+'con_table'+i} striped bordered hover size=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <span>#</span>\r\n                                    </th>\r\n                                    <th className={'fw-500 pl-2 '+color}>\r\n                                        <span>\r\n                                        {tense.heading}\r\n                                        </span>\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            { tense.forms.map((form: string, j: number)=>(\r\n                                        <tr key={str+j}>\r\n                                            <td  className=\"text-secondary text-capitalize fw-600\"\r\n                                            style={{width: '60px'}}>{form[0]}</td>\r\n                                            <td className=\"pl-2\">{form[1]}</td>\r\n                                        </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    ))\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst LoadingPage: React.FC = () =>{\r\n    const arr = [12321,9955,77878,22125];\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"text-center border rounded mb-3 mt-3 p-3 bg-light\">\r\n                <span style={{marginRight: '1rem'}}> <Skeleton /></span>\r\n                <span> <Skeleton /> </span>\r\n            </div>\r\n            <div className=\"bg-light rounded border px-3 pt-3\">\r\n                <Skeleton />\r\n                <div className=\"d-grid-2 mt-3\">\r\n                {\r\n                        arr.map((item: any)=> (\r\n                            <Table key={'con_table'+item} striped bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>\r\n                                            <Skeleton />\r\n                                        </th>\r\n                                        <th>\r\n                                        <Skeleton />\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                { arr.map((n: number, j: number)=>(\r\n                                            <tr key={n+j}>\r\n                                                <td>\r\n                                                <Skeleton />\r\n                                                </td>\r\n                                                <td className=\"ml-1\">\r\n                                                    <Skeleton />\r\n                                                </td>\r\n                                            </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nconst useGrammar = () => {\r\n    const data = useSelector((state: AppState) => state.conjugations);\r\n    const [ isLoading, setIsLoading ] = useState<boolean>(false);\r\n    const [ isError, setIsError ] = useState<boolean>(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const conjugate = async (verb: string) => {\r\n        try {\r\n            const res = await axios.get(`${linguaApi}?verb=${verb}`);\r\n            return await res.data;\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const grammarSearch = (verb: string) => {\r\n        setIsLoading(true);\r\n        conjugate(verb).then((res)=>{\r\n            if(res.result === 'OK'){\r\n                dispatch(setLatestConjugatedVerb(res));\r\n                setIsLoading(false);\r\n                if (isError) setIsError(false);\r\n            }\r\n            else{\r\n                setIsLoading(false);\r\n                 setIsError(true);\r\n            }\r\n           \r\n        }).catch(err=>{\r\n            setIsLoading(false);\r\n            setIsError(true);\r\n        });\r\n    };\r\n\r\n    return {\r\n        data,\r\n        isLoading,\r\n        isError,\r\n        grammarSearch\r\n    }\r\n}\r\n\r\nexport default GrammarSearch;","import { ActionForm } from './ActionForm';\r\nimport { GET_LAST_VERB_CONJUAGATED } from './types';\r\n\r\nexport const setLatestConjugatedVerb = (payload: any): ActionForm =>{\r\n    return {\r\n        type: GET_LAST_VERB_CONJUAGATED,\r\n        payload\r\n    }\r\n}\r\n"],"sourceRoot":""}