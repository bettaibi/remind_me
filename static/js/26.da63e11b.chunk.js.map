{"version":3,"sources":["../node_modules/react-bootstrap-icons/dist/icons/volume-up.js","pages/Main/wordDefinition/index.tsx","store/actions/definition.actions.ts"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","VolumeUp","forwardRef","_ref","ref","color","size","rest","React","createElement","xmlns","viewBox","width","height","fill","d","propTypes","PropTypes","string","oneOfType","number","defaultProps","schema","Yup","shape","query","required","max","useDefinition","data","useSelector","state","definitions","useState","isLoading","setIsLoading","isError","setIsError","dispatch","useDispatch","getDefinition","word","axios","get","process","then","res","payload","status","type","GET_LAST_SEARCHED_DEFINITION","catch","err","DefinitionResult","className","phonetics","text","style","border","outline","onClick","e","preventDefault","Audio","audio","play","console","info","message","meanings","map","item","partOfSpeech","def","index","minWidth","definition","example","synonyms","c","DefinitionSkeleton","count","marginRight","margin","WordDefinition","initilalValue","initialValues","validationSchema","onSubmit","values","submit","handleBlur","handleChange","handleSubmit","touched","errors","Form","noValidate","Control","name","value","onChange","onBlur","isInvalid","placeholder","autoComplete","Feedback","Alert","variant"],"mappings":"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","file":"static/js/26.da63e11b.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar VolumeUp = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 16 16\",\n    width: size,\n    height: size,\n    fill: color\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.025 8a4.486 4.486 0 0 1-1.318 3.182L8 10.475A3.489 3.489 0 0 0 9.025 8c0-.966-.392-1.841-1.025-2.475l.707-.707A4.486 4.486 0 0 1 10.025 8zM7 4a.5.5 0 0 0-.812-.39L3.825 5.5H1.5A.5.5 0 0 0 1 6v4a.5.5 0 0 0 .5.5h2.325l2.363 1.89A.5.5 0 0 0 7 12V4zM4.312 6.39L6 5.04v5.92L4.312 9.61A.5.5 0 0 0 4 9.5H2v-3h2a.5.5 0 0 0 .312-.11z\"\n  }));\n});\nVolumeUp.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nVolumeUp.defaultProps = {\n  color: 'currentColor',\n  size: '1em'\n};\nexport default VolumeUp;","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Form, Alert } from 'react-bootstrap';\r\nimport { VolumeUp } from 'react-bootstrap-icons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport { AppState, WordDefinitionForm, DefinitionForm, MeaningsForm } from '../../../model/app.model';\r\nimport { updateDefinition } from '../../../store/actions/definition.actions';\r\nimport axios from \"axios\";\r\nimport * as Yup from 'yup';\r\n\r\nconst schema = Yup.object().shape({\r\n    query: Yup.string().required('Enter a word to get its definition').max(50, 'Too much letters!')\r\n});\r\n\r\nconst definitionApi = process.env.REACT_APP_DEFINITION_API;\r\n\r\nconst WordDefinition: React.FC = () => {\r\n    const { data, getDefinition, isLoading, isError } = useDefinition();\r\n    let initilalValue = data ? { query: data.word } : { query: '' };\r\n\r\n    const submit = (values: any) => {\r\n        getDefinition(values.query);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik initialValues={initilalValue} validationSchema={schema} onSubmit={(values) => submit(values)}>\r\n                {\r\n                    ({ handleBlur, handleChange, handleSubmit, values, touched, errors }) => (\r\n                        <Form noValidate onSubmit={handleSubmit}>\r\n                            <Form.Control name=\"query\" value={values.query}\r\n                                onChange={handleChange} onBlur={handleBlur}\r\n                                isInvalid={touched.query && !!errors.query}\r\n                                placeholder=\"Looking for definition, synonyms or examples?\" required\r\n                                type=\"search\" autoComplete=\"off\"\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {errors.query}\r\n                            </Form.Control.Feedback>\r\n                        </Form>\r\n                    )\r\n                }\r\n            </Formik>\r\n\r\n            {\r\n              isLoading && <div><DefinitionSkeleton /></div>\r\n            }\r\n\r\n            {\r\n                isError && <Alert className=\"mt-3\" variant=\"danger\">Oops, we could not find the word that you have been looking for.</Alert>\r\n            }\r\n\r\n            {\r\n                data && !isLoading && <DefinitionResult data={data} />\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst useDefinition = () => {\r\n    const data: WordDefinitionForm | null = useSelector((state: AppState) => state.definitions);\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const [isError, setIsError] = useState<boolean>(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Get Definition\r\n    const getDefinition = (word: string) => {\r\n        try {\r\n            setIsLoading(true);\r\n            axios.get(`${definitionApi}/${word}`).then((res) => {\r\n                if (res.status === 200) {\r\n                    setIsLoading(false);\r\n                    dispatch(updateDefinition(res.data[0]));\r\n                    if (isError) setIsError(false);\r\n                }\r\n            }).catch((err) => {\r\n                setIsLoading(false);\r\n                setIsError(true);\r\n            });\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    return {\r\n        getDefinition,\r\n        data,\r\n        isLoading,\r\n        isError\r\n    };\r\n\r\n\r\n};\r\n\r\ninterface DefinitionResultProps {\r\n    data: WordDefinitionForm;\r\n}\r\n\r\nconst DefinitionResult: React.FC<DefinitionResultProps> = ({ data }) => {\r\n\r\n    const spell = (e: any) => {\r\n        try {\r\n            e.preventDefault();\r\n            const audio = new Audio(data.phonetics[0].audio);\r\n            audio.play();\r\n        }\r\n        catch (err) {\r\n            console.info(err.message)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"border rounded p-3 my-3 bg-light\">\r\n            <h5>Definitions of {data.word}</h5>\r\n            {data.phonetics && (\r\n                <>\r\n                    <span className=\"mr-1\">{data.phonetics[0].text}</span>\r\n                    <button style={{ border: 'none', outline: 'none' }} className=\"btn\" onClick={spell}><VolumeUp size=\"24\" /></button>\r\n                </>\r\n            )}\r\n\r\n            {\r\n                data.meanings.map((item: MeaningsForm, i: number) => (\r\n                    <div key={'mean' + i}>\r\n                        {item.partOfSpeech && <h6 className=\"text-info text-capitalize\">{item.partOfSpeech}</h6>}\r\n\r\n                        <div>\r\n                            {\r\n                                item.definitions.map((def: DefinitionForm, index: number) => (\r\n                                    <div className=\"d-flex flex-row py-1\" key={'def' + index}>\r\n                                        <div style={{ minWidth: '50px' }}>\r\n                                            <div style={{ width: '25px', height: '25px' }}\r\n                                                className=\"bg-secondary text-light rounded-circle text-center d-flex justify-content-center\">{index + 1}</div>\r\n                                        </div>\r\n                                        <div className=\"\">\r\n                                            <p className=\"text-dark m-0\">{def.definition}</p>\r\n                                            {def.example && <small className=\"text-secondary\">Example: {def.example}</small>}\r\n                                            <div>\r\n                                                {\r\n                                                    def.synonyms && (\r\n                                                        <>\r\n                                                            <span className=\"text-secondary\">Synonyms: </span>\r\n                                                            <div className=\"d-flex flex-row flex-wrap\">\r\n                                                                {\r\n                                                                    def.synonyms.map((item: string, c: number) => (\r\n                                                                        <span key={'sy' + c} className=\"border rounded-lg text-secondary py-1 px-2 mr-2 my-1\">{item}</span>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </div>\r\n                                                        </>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nconst DefinitionSkeleton: React.FC = () => {\r\n\r\n    return (\r\n        <div className=\"border rounded p-3 my-3 bg-light\">\r\n            <h5> <Skeleton /></h5>\r\n            <span> <Skeleton /> </span>\r\n            <h6> <Skeleton /></h6>\r\n            <div className=\"d-flex flex-row py-1 mt-3\">\r\n                <div style={{ minWidth: '50px' }}>\r\n                    <div style={{ width: '25px', height: '25px' }}\r\n                        className=\"bg-secondary rounded-circle d-flex justify-content-center\">\r\n                        <Skeleton /> \r\n                    </div>\r\n                </div>\r\n                \r\n                <div style={{width: '100%'}}>\r\n                     <Skeleton count={2} /> \r\n                     <div className=\"d-flex flex-row\" style={{width: '100%'}}>\r\n                     <Skeleton  style={{width: '80px', marginRight: '0.5rem'}} count={4} /> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex flex-row py-1 mt-3\">\r\n                <div style={{ minWidth: '50px' }}>\r\n                    <div style={{ width: '25px', height: '25px' }}\r\n                        className=\"bg-secondary rounded-circle d-flex justify-content-center\">\r\n                        <Skeleton /> \r\n                    </div>\r\n                </div>\r\n                \r\n                <div style={{width: '100%'}}>\r\n                     <Skeleton count={4} /> \r\n                     <div className=\"d-flex flex-row mt-2 flex-wrap\" style={{width: '100%'}}>\r\n                     <span className=\"rounded-lg border p-2\" style={{width: '100px', margin: '0.5rem 0.5rem 0.5rem 0'}}>\r\n                         <Skeleton />\r\n                     </span>\r\n                     <span className=\"rounded-lg border p-2\" style={{width: '100px',margin: '0.5rem 0.5rem 0.5rem 0'}}>\r\n                         <Skeleton />\r\n                     </span>\r\n                     <span className=\"rounded-lg border p-2\" style={{width: '100px', margin: '0.5rem 0.5rem 0.5rem 0'}}>\r\n                         <Skeleton />\r\n                     </span>\r\n                     <span className=\"rounded-lg border p-2\" style={{width: '100px', margin: '0.5rem 0.5rem 0.5rem 0'}}>\r\n                         <Skeleton />\r\n                     </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordDefinition;","import { ActionForm } from './ActionForm';\r\nimport { GET_LAST_SEARCHED_DEFINITION } from './types';\r\n\r\nexport const updateDefinition = (payload: any): ActionForm => {\r\n    return {\r\n        type: GET_LAST_SEARCHED_DEFINITION,\r\n        payload\r\n    }\r\n}"],"sourceRoot":""}